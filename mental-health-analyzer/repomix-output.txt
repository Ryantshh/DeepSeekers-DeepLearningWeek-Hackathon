This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
analysis_results/mental_health_analysis_20250301_220304.json
analysis_results/mental_health_analysis_20250302_004103.json
analysis_results/mental_health_analysis_20250302_025214.json
analysis_results/mental_health_analysis_20250302_025257.json
analysis_results/mental_health_analysis_20250302_025413.json
analysis_results/mental_health_analysis_20250302_030801.json
analysis_results/mental_health_analysis_20250302_030854.json
analysis_results/mental_health_analysis_20250302_031043.json
analysis_results/mental_health_analysis_20250302_033117.json
analysis_results/mental_health_analysis_20250302_034052.json
app.py
clinical_validation.py
middleware.py
model_config.py
requirements.txt
templates/index.html
templates/therapist_dashboard.html
text_processing.py
therapist_routes.py
therapy_sessions/therapy_session_20250301.txt
therapy_sessions/therapy_session_anxiety_20250305.txt
therapy_sessions/therapy_session_substance_20250310.txt

================================================================
Files
================================================================

================
File: analysis_results/mental_health_analysis_20250301_220304.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "I don\u2019t see the point in anything anymore.",
        "I feel completely empty."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        1
      ],
      "evidence": [
        "I feel like I\u2019m just existing, not living."
      ],
      "total": 1,
      "risk_percentage": 25.0,
      "severity": "Slight/Rare",
      "clinical_concern": false
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        0,
        0
      ],
      "evidence": [
        "I feel like I\u2019m just going through the motions can be exhausting.",
        "I just don\u2019t want to feel like this anymore.",
        "No explicit evidence found in the text."
      ],
      "total": 2,
      "risk_percentage": 16.7,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I think it would be easier if I weren\u2019t here."
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        2,
        0
      ],
      "evidence": [
        "I don\u2019t know if I can talk to anyone.",
        "No explicit evidence found in the text."
      ],
      "total": 2,
      "risk_percentage": 25.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anxiety",
      "Suicidal Ideation",
      "Personality Functioning"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "Medium",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Medium",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_004103.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        4,
        0
      ],
      "evidence": [
        "Hello I want to jump out the window",
        "No explicit evidence found in the text."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        4
      ],
      "evidence": [
        "Hello I want to jump out the window"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        4,
        0,
        0
      ],
      "evidence": [
        "Hello I want to jump out the window",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 4,
      "risk_percentage": 33.3,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Hello I want to jump out the window"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "Medium",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "Medium",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": [
      "Depression: High variance in question scores may indicate incomplete assessment",
      "Anxiety: High variance in question scores may indicate incomplete assessment"
    ]
  }
}

================
File: analysis_results/mental_health_analysis_20250302_025214.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about"
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "I'm not sure what they do",
        "I got no friends, where can i find one"
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_025257.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well actually, I've been feeling like this ever since I suck at coding and I don't feel like i can get any better"
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity"
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "I've been feeling like this ever since I suck at coding and I don't feel like i can get any better",
        "Feeling embarrassed about asking for help can be a significant barrier"
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_025413.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well actually, I've been feeling like this ever since I suck at coding and I don't feel like i can get any better"
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity"
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "I've been feeling like this ever since I suck at coding and I don't feel like i can get any better",
        "Feeling embarrassed about asking for help can be a significant barrier"
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_030801.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well i tried going for walks and things like that, but nothing seems interesting anymore."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity."
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "I'm not sure what they do",
        "I got no friends, where can i find one"
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_030854.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well i tried going for walks and things like that, but nothing seems interesting anymore."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity."
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "It can be hard to find motivation when you're feeling unenthusiastic",
        "Feeling embarrassed about asking for help can be a significant barrier."
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        2
      ],
      "evidence": [
        "I got no sleep for days cuz of this"
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation",
      "Sleep Problems"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "High",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_031043.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well i tried going for walks and things like that, but nothing seems interesting anymore."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity."
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough",
        "I don't really feel like speaking to a therapist might help too",
        "Feeling embarrassed about asking for help can be a significant barrier."
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        2
      ],
      "evidence": [
        "I got no sleep for days cuz of this"
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation",
      "Sleep Problems"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "High",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_033117.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        2
      ],
      "evidence": [
        "Man I'm feeling quite down today, do you have any suggestions?",
        "Well i tried going for walks and things like that, but nothing seems interesting anymore."
      ],
      "total": 4,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        2
      ],
      "evidence": [
        "It can be really discouraging when we're struggling with something we're passionate about, especially if it's related to our work or identity."
      ],
      "total": 2,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        2,
        2,
        2
      ],
      "evidence": [
        "Feeling down can be really tough.",
        "Feeling embarrassed about asking for help can be a significant barrier.",
        "I'm not sure what they do"
      ],
      "total": 6,
      "risk_percentage": 50.0,
      "severity": "Mild",
      "clinical_concern": true
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "Sometimes I want to end it"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Anger",
      "Anxiety",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "High",
      "Mania": "Low",
      "Anxiety": "High",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": []
  }
}

================
File: analysis_results/mental_health_analysis_20250302_034052.json
================
{
  "domains": [
    {
      "name": "Depression",
      "scores": [
        2,
        4
      ],
      "evidence": [
        "I want to kill myself",
        "I want to kill myself"
      ],
      "total": 6,
      "risk_percentage": 75.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Anger",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Mania",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Anxiety",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Somatic Symptoms",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Suicidal Ideation",
      "scores": [
        4
      ],
      "evidence": [
        "I want to kill myself"
      ],
      "total": 4,
      "risk_percentage": 100.0,
      "severity": "Severe",
      "clinical_concern": true
    },
    {
      "name": "Psychosis",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Sleep Problems",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Memory",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Repetitive Thoughts and Behaviors",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Dissociation",
      "scores": [
        0
      ],
      "evidence": [
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Personality Functioning",
      "scores": [
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    },
    {
      "name": "Substance Use",
      "scores": [
        0,
        0,
        0
      ],
      "evidence": [
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text.",
        "No explicit evidence found in the text."
      ],
      "total": 0,
      "risk_percentage": 0.0,
      "severity": "None",
      "clinical_concern": false
    }
  ],
  "summary": {
    "clinical_concerns": [
      "Depression",
      "Suicidal Ideation"
    ],
    "confidence_levels": {
      "Depression": "High",
      "Anger": "Low",
      "Mania": "Low",
      "Anxiety": "Low",
      "Somatic Symptoms": "Low",
      "Suicidal Ideation": "High",
      "Psychosis": "Low",
      "Sleep Problems": "Low",
      "Memory": "Low",
      "Repetitive Thoughts and Behaviors": "Low",
      "Dissociation": "Low",
      "Personality Functioning": "Low",
      "Substance Use": "Low"
    },
    "notes": [
      "Sleep Problems: Potential underestimation - high Depression scores often correlate with Sleep Problems symptoms",
      "Memory: Potential underestimation - high Depression scores often correlate with Memory symptoms"
    ]
  }
}

================
File: app.py
================
from flask import Flask, render_template, request, jsonify
import requests
import json
import os
import logging
import traceback
import re
from dotenv import load_dotenv
from datetime import datetime
# Add this at the beginning with other imports
from therapist_routes import register_therapist_routes
from flask_cors import CORS

# Add this after app initialization
# Register therapist routes


# Import our custom modules
from text_processing import preprocess_text
from model_config import get_model_config
from clinical_validation import validate_clinical_assessment

# Load environment variables
load_dotenv()

app = Flask(__name__)
register_therapist_routes(app)
CORS(app)
# Configure Groq API
GROQ_API_URL = "https://api.groq.com/openai/v1/chat/completions"
GROQ_API_KEY = os.getenv("GROQ_API_KEY")
GROQ_MODEL = os.getenv("GROQ_MODEL", "llama3-8b-8192")  # Default to Llama 3 8B model

# Define the DSM-5 Level 1 Cross-Cutting Symptom Measure domains and questions
DSM5_DOMAINS = [
    {
        "name": "Depression",
        "questions": [
            "Little interest or pleasure in doing things",
            "Feeling down, depressed, or hopeless"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 2,
        "color": "#8A2BE2"  # BlueViolet
    },
    {
        "name": "Anger",
        "questions": [
            "Feeling more irritated, grouchy, or angry than usual"
        ],
        "max_score": 4,  # 1 question × 4 (max per question)
        "threshold": 2,
        "color": "#FF4500"  # OrangeRed
    },
    {
        "name": "Mania",
        "questions": [
            "Sleeping less than usual, but still have a lot of energy",
            "Starting lots more projects than usual or doing more risky things than usual"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 2,
        "color": "#FF8C00"  # DarkOrange
    },
    {
        "name": "Anxiety",
        "questions": [
            "Feeling nervous, anxious, frightened, worried, or on edge",
            "Feeling panic or being frightened",
            "Avoiding situations that make you anxious"
        ],
        "max_score": 12,  # 3 questions × 4 (max per question)
        "threshold": 2,
        "color": "#4682B4"  # SteelBlue
    },
    {
        "name": "Somatic Symptoms",
        "questions": [
            "Unexplained aches and pains",
            "Feeling that your illnesses are not being taken seriously enough"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 2,
        "color": "#2E8B57"  # SeaGreen
    },
    {
        "name": "Suicidal Ideation",
        "questions": [
            "Thoughts of actually hurting yourself"
        ],
        "max_score": 4,  # 1 question × 4 (max per question)
        "threshold": 1,  # Lower threshold for suicidal ideation
        "color": "#B22222"  # FireBrick
    },
    {
        "name": "Psychosis",
        "questions": [
            "Hearing things other people couldn't hear, such as voices",
            "Feeling that someone could hear your thoughts, or that you could hear what another person was thinking"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 1,  # Lower threshold for psychosis
        "color": "#9932CC"  # DarkOrchid
    },
    {
        "name": "Sleep Problems",
        "questions": [
            "Problems with sleep that affected your sleep quality"
        ],
        "max_score": 4,  # 1 question × 4 (max per question)
        "threshold": 2,
        "color": "#6495ED"  # CornflowerBlue
    },
    {
        "name": "Memory",
        "questions": [
            "Problems with memory"
        ],
        "max_score": 4,  # 1 question × 4 (max per question)
        "threshold": 2,
        "color": "#3CB371"  # MediumSeaGreen
    },
    {
        "name": "Repetitive Thoughts and Behaviors",
        "questions": [
            "Unpleasant thoughts, urges, or images that repeatedly enter your mind",
            "Feeling driven to perform certain behaviors or mental acts over and over again"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 2,
        "color": "#DAA520"  # GoldenRod
    },
    {
        "name": "Dissociation",
        "questions": [
            "Feeling detached or distant from yourself, your body, your physical surroundings, or your memories"
        ],
        "max_score": 4,  # 1 question × 4 (max per question)
        "threshold": 2,
        "color": "#9370DB"  # MediumPurple
    },
    {
        "name": "Personality Functioning",
        "questions": [
            "Not knowing who you really are or what you want out of life",
            "Not feeling close to other people or enjoying relationships"
        ],
        "max_score": 8,  # 2 questions × 4 (max per question)
        "threshold": 2,
        "color": "#4169E1"  # RoyalBlue
    },
    {
        "name": "Substance Use",
        "questions": [
            "Drinking at least 4 drinks of any kind of alcohol in a single day",
            "Smoking any cigarettes, a cigar, or pipe, or using snuff or chewing tobacco",
            "Using any of the following medicines on your own: pain medications, stimulants, sedatives or tranquilizers, or drugs like marijuana, cocaine or crack, club drugs, hallucinogens, heroin, inhalants, or methamphetamine"
        ],
        "max_score": 12,  # 3 questions × 4 (max per question)
        "threshold": 1,  # Lower threshold for substance use
        "color": "#808000"  # Olive
    }
]

# Severity interpretation guide
SEVERITY_LEVELS = [
    {"range": [0, 0], "label": "None", "color": "#28a745"},
    {"range": [1, 1], "label": "Slight/Rare", "color": "#17a2b8"},
    {"range": [2, 2], "label": "Mild", "color": "#ffc107"},
    {"range": [3, 3], "label": "Moderate", "color": "#fd7e14"},
    {"range": [4, 4], "label": "Severe", "color": "#dc3545"}
]

def configure_logging():
    """Configure logging for the application"""
    if not app.debug:
        # In production, log to file
        file_handler = logging.FileHandler('app.log')
        file_handler.setLevel(logging.WARNING)
        app.logger.addHandler(file_handler)
    else:
        # In development, log to console with more details
        stream_handler = logging.StreamHandler()
        stream_handler.setLevel(logging.INFO)
        formatter = logging.Formatter(
            '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        )
        stream_handler.setFormatter(formatter)
        app.logger.addHandler(stream_handler)
        app.logger.setLevel(logging.INFO)

# Configure logging
configure_logging()



@app.route('/')
def index():
    return render_template('index.html')

@app.route('/analyze', methods=['POST'])
def analyze():
    data = request.get_json()
    text = data.get('text', '')
    
    if not text:
        return jsonify({"error": "No text provided"}), 400
    
    try:
        # Analyze the text
        result = analyze_text(text)
        
        # Create directory for saving results
        results_dir = os.path.join(os.getcwd(), 'analysis_results')
        os.makedirs(results_dir, exist_ok=True)
        
        # Generate unique filename with timestamp
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        filename = f"mental_health_analysis_{timestamp}.json"
        file_path = os.path.join(results_dir, filename)
        
        # Prepare JSON data to save
        json_save_data = {
            "domains": [
                {
                    "name": domain["name"],
                    "scores": domain["scores"],
                    "evidence": domain["evidence"],
                    "total": domain["total"],
                    "risk_percentage": domain.get("risk_percentage", 0),
                    "severity": domain.get("severity", "None"),
                    "clinical_concern": domain.get("clinical_concern", False)
                } for domain in result.get("domains", [])
            ],
            "summary": result.get("summary", {})
        }
        
        # Save the file
        with open(file_path, 'w') as f:
            json.dump(json_save_data, f, indent=2)
        
        # Return the analysis result
        return jsonify(result)
    
    except Exception as e:
        # Error handling
        error_details = traceback.format_exc()
        app.logger.error(f"Error during analysis: {str(e)}\n{error_details}")
        
        return jsonify({
            "error": "Analysis failed",
            "details": str(e)
        }), 500
def analyze_text(text):
    """Enhanced text analysis using DSM-5 Level 1 Cross-Cutting Symptom Measure with Groq API"""
    
    if not GROQ_API_KEY:
        raise Exception("Groq API key is missing. Please set the GROQ_API_KEY environment variable.")
    
    # Use enhanced preprocessing
    processed_text = preprocess_text(text)
    app.logger.info(f"Preprocessed text length: {len(processed_text)}")
    
    # Get optimal model configuration
    model_config = get_model_config()
    app.logger.info(f"Using model: {model_config['model']} with temperature: {model_config.get('temperature', 0.1)}")
    
    # Create improved system prompt
    system_prompt = """
    You are a specialized mental health analysis assistant trained specifically on the DSM-5 Level 1 Cross-Cutting Symptom Measure (Adult Version).

    SCORING GUIDELINES:
    0: None - No evidence at all of the symptom
    1: Slight/Rare - Very minimal evidence, mentioned in passing, or a single isolated instance
    2: Mild/Several days - Clear but infrequent or low-intensity evidence appearing in multiple contexts
    3: Moderate/More than half the days - Strong evidence appearing consistently or with moderate intensity
    4: Severe/Nearly every day - Overwhelming evidence or explicit statements about severe and frequent symptoms

    IMPORTANT SCORING RULES:
    - Use the FULL RANGE of scores from 0-4 based on the evidence severity
    - Do NOT limit scores to 2 or below - use 3 and 4 when evidence supports it
    - Provide specific quotes that justify each score, with context
    - Consider frequency, intensity, duration, and distress when scoring
    - Look for patterns across the entire text rather than isolated mentions
    - If a symptom is explicitly denied, score it as 0
    - When you see clear evidence of moderate (3) or severe (4) symptoms, score accordingly

    EXAMPLES OF HIGHER SCORES (3-4):
    - For score 3 (Moderate): Evidence shows symptoms occur "more than half the days" or with "significant intensity"
    - For score 4 (Severe): Evidence shows symptoms are "nearly constant" or "overwhelming" or "severely impairing"

    Your analysis must be evidence-based, objective, clinically meaningful, and use the FULL SCORING RANGE.
    Format your response as a JSON object with no additional explanation.
    """
    
    # Create the user prompt with all domains and questions
    user_prompt = f"""
    Text to analyze: 

    {processed_text}
    
    Please analyze the above text and complete the DSM-5 Level 1 Cross-Cutting Symptom Measure:
    
    """
    
    # Add all domains and questions to the prompt
    domain_question_index = 1
    for domain_index, domain in enumerate(DSM5_DOMAINS):
        user_prompt += f"\nDomain {domain_index + 1}. {domain['name']}:\n"
        for question_index, question in enumerate(domain['questions']):
            user_prompt += f"{domain_question_index}. {question}\n"
            domain_question_index += 1
    
    user_prompt += """
    EXAMPLES OF PROPER SCORING:
    
    Example 1: "I've been having trouble sleeping the past couple weeks. I wake up around 3am most nights."
    Score: 3 (Moderate/More than half the days)
    Evidence: "I wake up around 3am most nights."
    Rationale: The phrase "most nights" indicates frequency of more than half the days.
    
    Example 2: "Sometimes I get a bit nervous before presentations."
    Score: 1 (Slight/Rare)
    Evidence: "Sometimes I get a bit nervous before presentations."
    Rationale: "Sometimes" and "a bit" indicate low frequency and intensity.
    
    Example 3: "I can't focus on anything. My mind is constantly racing with worry about everything."
    Score: 4 (Severe/Nearly every day)
    Evidence: "I can't focus on anything. My mind is constantly racing with worry about everything."
    Rationale: "Constantly" indicates very high frequency, and "can't focus on anything" suggests severity.
    
    Remember to quote specific text as evidence for each score you assign.
    
    Respond with only a JSON object in this exact format:
    {
      "domains": [
        {
          "name": "Domain name",
          "scores": [score1, score2, ...],
          "evidence": ["Direct quote from text as evidence for score 1", "Direct quote from text as evidence for score 2", ...],
          "total": totalScore
        },
        ... (repeat for all domains)
      ]
    }
    """
    
    # Configure headers for the API request
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {GROQ_API_KEY}"
    }
    
    # Prepare the payload for Groq API
    payload = {
        "model": model_config["model"],
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ],
        "temperature": model_config.get("temperature", 0.1),
        "max_tokens": model_config.get("max_tokens", 2000),
        "top_p": model_config.get("top_p", 0.95),
        "frequency_penalty": model_config.get("frequency_penalty", 0),
        "presence_penalty": model_config.get("presence_penalty", 0),
        "response_format": {"type": "json_object"}
    }
    
    try:
        # Make the API request to Groq
        app.logger.info(f"Sending request to Groq API")
        response = requests.post(
            GROQ_API_URL,
            headers=headers,
            json=payload,
            timeout=90  # Extended timeout for more complex analysis
        )
        
        # Check for successful response
        if response.status_code != 200:
            error_msg = f"API request failed with status code {response.status_code}: {response.text}"
            app.logger.error(error_msg)
            raise Exception(error_msg)
        
        # Parse the response
        result = response.json()
        content = result["choices"][0]["message"]["content"]
        
        # Try to parse the response as JSON
        try:
            parsed_result = json.loads(content)
        except json.JSONDecodeError:
            # If that fails, try to extract JSON using regex
            app.logger.warning("JSON parsing failed, attempting to extract JSON from text")
            json_match = re.search(r'({.*})', content, re.DOTALL)
            if json_match:
                try:
                    parsed_result = json.loads(json_match.group(1))
                except json.JSONDecodeError:
                    error_msg = "Failed to extract valid JSON from the model response"
                    app.logger.error(f"{error_msg}: {content}")
                    raise Exception(error_msg)
            else:
                error_msg = "No JSON object found in the model response"
                app.logger.error(f"{error_msg}: {content}")
                raise Exception(error_msg)
        
        # Validate the structure of the parsed result
        if "domains" not in parsed_result:
            error_msg = "Response is missing required domains field"
            app.logger.error(f"{error_msg}: {parsed_result}")
            raise Exception(error_msg)
        
        # Process and validate each domain
        validated_domains = []
        for i, domain_data in enumerate(parsed_result.get("domains", [])):
            # Map domain to our defined domains
            if i >= len(DSM5_DOMAINS):
                app.logger.warning(f"Extra domain in response: {domain_data.get('name', 'Unknown')}")
                continue
            
            domain = DSM5_DOMAINS[i]
            
            # Ensure all required fields exist with valid values
            if "name" not in domain_data or domain_data["name"] != domain["name"]:
                domain_data["name"] = domain["name"]
                
            # Validate scores array 
            if "scores" not in domain_data or not isinstance(domain_data["scores"], list):
                domain_data["scores"] = [0] * len(domain["questions"])
            else:
                # Ensure correct length
                while len(domain_data["scores"]) < len(domain["questions"]):
                    domain_data["scores"].append(0)
                domain_data["scores"] = domain_data["scores"][:len(domain["questions"])]
                
                # Validate each score (ensure full range 0-4 is allowed)
                for s_idx, score in enumerate(domain_data["scores"]):
                    if not isinstance(score, (int, float)) or score < 0 or score > 4:
                        app.logger.warning(f"Invalid score in domain {domain['name']}, question {s_idx+1}: {score}")
                        domain_data["scores"][s_idx] = 0
                    else:
                        # Ensure score is an integer between 0-4 (no capping below maximum)
                        domain_data["scores"][s_idx] = min(4, max(0, int(score)))
            
            # Validate evidence array
            if "evidence" not in domain_data or not isinstance(domain_data["evidence"], list):
                domain_data["evidence"] = ["No explicit evidence found in the text."] * len(domain["questions"])
            else:
                # Ensure correct length
                while len(domain_data["evidence"]) < len(domain["questions"]):
                    domain_data["evidence"].append("No explicit evidence found in the text.")
                domain_data["evidence"] = domain_data["evidence"][:len(domain["questions"])]
                
                # Validate each evidence string
                for e_idx, evidence in enumerate(domain_data["evidence"]):
                    if not isinstance(evidence, str) or not evidence.strip():
                        domain_data["evidence"][e_idx] = "No explicit evidence found in the text."
            
            # Calculate total score
            domain_data["total"] = sum(domain_data["scores"])
            
            # Calculate risk percentage
            risk_percentage = round((domain_data["total"] / domain["max_score"] * 100), 1)
            domain_data["risk_percentage"] = risk_percentage
            
            # Determine severity based on highest individual question score
            max_score = max(domain_data["scores"]) if domain_data["scores"] else 0
            severity = None
            for level in SEVERITY_LEVELS:
                if max_score >= level["range"][0] and max_score <= level["range"][1]:
                    severity = level
            
            # If no severity was found, use "None" level
            if severity is None:
                severity = SEVERITY_LEVELS[0]
            
            # Determine if this domain is clinically concerning
            clinical_concern = max_score >= domain["threshold"]
            
            # Add these to the domain data
            domain_data["severity"] = severity["label"]
            domain_data["severity_color"] = severity["color"]
            domain_data["domain_color"] = domain["color"]
            domain_data["clinical_concern"] = clinical_concern
            domain_data["questions"] = domain["questions"]
            domain_data["threshold"] = domain["threshold"]
            
            validated_domains.append(domain_data)
        
        # Fill in any missing domains
        while len(validated_domains) < len(DSM5_DOMAINS):
            i = len(validated_domains)
            domain = DSM5_DOMAINS[i]
            empty_domain = {
                "name": domain["name"],
                "scores": [0] * len(domain["questions"]),
                "evidence": ["No data received from analysis."] * len(domain["questions"]),
                "total": 0,
                "risk_percentage": 0,
                "severity": SEVERITY_LEVELS[0]["label"],
                "severity_color": SEVERITY_LEVELS[0]["color"],
                "domain_color": domain["color"],
                "clinical_concern": False,
                "questions": domain["questions"],
                "threshold": domain["threshold"]
            }
            validated_domains.append(empty_domain)
        
        # Apply clinical validation logic
        validated_domains = validate_clinical_assessment(validated_domains)
        
        # Prepare the final output
        return {
            "domains": validated_domains,
            "summary": {
                "clinical_concerns": [
                    domain["name"] for domain in validated_domains 
                    if domain.get("clinical_concern", False)
                ],
                "confidence_levels": {
                    domain["name"]: domain.get("confidence", "Medium") 
                    for domain in validated_domains
                },
                "notes": [
                    f"{domain['name']}: {', '.join(domain['clinical_notes'])}" 
                    for domain in validated_domains
                    if domain.get('clinical_notes')
                ]
            }
        }
        
    except requests.RequestException as e:
        error_msg = f"Network error contacting Groq API: {str(e)}"
        app.logger.error(error_msg)
        raise Exception(error_msg)

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5001)

================
File: clinical_validation.py
================
import logging

def validate_clinical_assessment(domains_data):
    """Validate and adjust the clinical assessment for consistency and accuracy."""
    
    logger = logging.getLogger(__name__)
    validated_data = domains_data.copy()
    
    # Known clinical correlations between domains (simplified)
    domain_correlations = {
        "Depression": ["Suicidal Ideation", "Sleep Problems", "Memory"],
        "Anxiety": ["Sleep Problems", "Somatic Symptoms"],
        "Psychosis": ["Dissociation"],
        "Mania": ["Sleep Problems"]
    }
    
    # Get domain scores dict for easier reference
    domain_scores = {domain["name"]: {
        "total": domain["total"],
        "max_score": sum([4] * len(domain["scores"])),  # 4 is max score per question
        "percentage": domain["total"] / sum([4] * len(domain["scores"])) * 100 if sum([4] * len(domain["scores"])) > 0 else 0,
        "scores": domain["scores"]
    } for domain in validated_data}
    
    # Check for clinical inconsistencies
    for primary_domain, related_domains in domain_correlations.items():
        if primary_domain not in domain_scores:
            continue
            
        primary_percentage = domain_scores[primary_domain]["percentage"]
        
        # If primary domain has high score, check related domains
        if primary_percentage > 50:  # More than half the max score
            for related_domain in related_domains:
                if related_domain not in domain_scores:
                    continue
                    
                related_percentage = domain_scores[related_domain]["percentage"]
                
                # Flag potential inconsistency if related domain is much lower
                if related_percentage < 15 and primary_percentage > 60:
                    logger.warning(
                        f"Clinical inconsistency detected: {primary_domain} is high ({primary_percentage:.1f}%) "
                        f"but {related_domain} is very low ({related_percentage:.1f}%)"
                    )
                    
                    # Add a note about this inconsistency
                    for domain in validated_data:
                        if domain["name"] == related_domain:
                            if "clinical_notes" not in domain:
                                domain["clinical_notes"] = []
                            domain["clinical_notes"].append(
                                f"Potential underestimation - high {primary_domain} scores often correlate with {related_domain} symptoms"
                            )
    
    # Check for extreme outliers in individual question scores within domains
    for domain in validated_data:
        scores = domain["scores"]
        if len(scores) > 1:  # Only check domains with multiple questions
            max_score = max(scores)
            min_score = min(scores)
            
            # Check for high variance within domain questions
            if max_score >= 3 and min_score == 0:
                if "clinical_notes" not in domain:
                    domain["clinical_notes"] = []
                domain["clinical_notes"].append(
                    "High variance in question scores may indicate incomplete assessment"
                )
    
    # Add confidence ratings
    for domain in validated_data:
        # Calculate confidence based on evidence quality
        evidence_quality = []
        for ev in domain["evidence"]:
            if "No explicit evidence" in ev or not ev:
                evidence_quality.append(0)
            elif len(ev) < 20:
                evidence_quality.append(1)
            else:
                evidence_quality.append(2)
        
        avg_evidence_quality = sum(evidence_quality) / len(evidence_quality) if evidence_quality else 0
        max_score = max(domain["scores"]) if domain["scores"] else 0
        
        # Higher confidence for domains with better evidence
        if avg_evidence_quality > 1.5:
            domain["confidence"] = "High"
        elif avg_evidence_quality > 0.5 or max_score >= 3:
            domain["confidence"] = "Medium"
        else:
            domain["confidence"] = "Low"
    
    return validated_data

================
File: middleware.py
================
import os
from functools import wraps
from flask import request, current_app

def accuracy_middleware(view_function):
    """Middleware to set accuracy level from request headers or JSON data"""
    @wraps(view_function)
    def decorated_function(*args, **kwargs):
        # Check if accuracy is specified in the request
        accuracy = None
        
        # Look for it in headers
        if 'X-Analysis-Accuracy' in request.headers:
            accuracy = request.headers.get('X-Analysis-Accuracy')
            
        # Or in JSON data
        elif request.is_json and 'accuracy' in request.get_json():
            accuracy = request.get_json().get('accuracy')
        
        # Set environment variable if accuracy is valid
        if accuracy in ['high_accuracy', 'balanced', 'fast']:
            os.environ['ANALYSIS_ACCURACY'] = accuracy
            current_app.logger.info(f"Setting analysis accuracy to {accuracy}")
        
        # Call the actual view function
        return view_function(*args, **kwargs)
        
    return decorated_function

================
File: model_config.py
================
import os

def get_model_config():
    """Return optimized model configuration based on analysis needs."""
    
    # Define model options based on accuracy needs
    model_options = {
        "high_accuracy": {
            "model": "llama3-70b-8192",  # Use the larger model for more accurate analysis
            "temperature": 0.1,          # Keep temperature low for consistency
            "max_tokens": 3000,          # Allow for more detailed analysis
            "top_p": 0.95,               # Slightly restrict token selection
            "frequency_penalty": 0.1,    # Slight penalty to avoid repetition
            "presence_penalty": 0.1      # Slight penalty to encourage coverage of all topics
        },
        "balanced": {
            "model": "llama3-8b-8192",   # Default model
            "temperature": 0.2,          # Slightly higher temperature
            "max_tokens": 2000,
            "top_p": 0.9,
            "frequency_penalty": 0,
            "presence_penalty": 0
        },
        "fast": {
            "model": "llama3-8b-8192",
            "temperature": 0.3,
            "max_tokens": 1500,
            "top_p": 0.85,
            "frequency_penalty": 0,
            "presence_penalty": 0
        }
    }
    
    # Always use high accuracy
    accuracy_level = "high_accuracy"
    
    # Override with environment variables if specified
    config = model_options[accuracy_level]
    
    if os.getenv("GROQ_MODEL"):
        config["model"] = os.getenv("GROQ_MODEL")
    
    return config

================
File: requirements.txt
================
flask==2.3.3
requests==2.31.0
python-dotenv==1.0.0
gunicorn==21.2.0
python-dateutil==2.8.2

================
File: templates/index.html
================
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal Mental Health Assessment Tool</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            padding-top: 2rem;
            padding-bottom: 2rem;
            font-family: Arial, sans-serif;
        }

        .analyzer-container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .form-container {
            background-color: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .results-container {
            display: none;
            background-color: white;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .header-banner {
            background-color: #4169E1;
            border-radius: 10px 10px 0 0;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .domain-card {
            margin-bottom: 1.5rem;
            border: none;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            height: 100%;
        }

        .domain-card .card-header {
            background-color: #f8f9fa;
            border-bottom: none;
            padding: 1rem;
        }

        .domain-card .card-body {
            padding: 1.5rem;
        }

        .chart-container {
            position: relative;
            height: 150px;
            width: 150px;
            margin: 0 auto;
        }

        .chart-percentage {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1.5rem;
            font-weight: bold;
        }

        .evidence-item {
            margin-top: 10px;
            padding: 8px 12px;
            background-color: #f8f9fa;
            border-radius: 8px;
            font-style: italic;
            font-size: 0.9rem;
            color: #6c757d;
        }

        .question-badge {
            display: inline-block;
            width: 25px;
            height: 25px;
            line-height: 25px;
            text-align: center;
            border-radius: 50%;
            color: white;
            font-size: 0.8rem;
            margin-right: 8px;
        }

        .severity-badge {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            color: white;
            font-size: 0.8rem;
            font-weight: 500;
            margin-left: 0.5rem;
        }

        .clinical-concern {
            border-left: 5px solid #dc3545;
        }

        .clinical-note {
            margin-top: 10px;
            padding: 8px 12px;
            background-color: #fff3cd;
            border-left: 3px solid #ffc107;
            border-radius: 4px;
            font-size: 0.9rem;
        }

        .disclaimer {
            font-size: 0.8rem;
            color: #6c757d;
            font-style: italic;
            margin-top: 1rem;
        }

        .loader {
            display: none;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 2s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }

        .summary-card {
            margin-bottom: 2rem;
        }

        #concernsList {
            margin-top: 1rem;
        }

        #concernsList .concern-item {
            padding: 0.75rem;
            margin-bottom: 0.75rem;
            border-radius: 0.25rem;
            border-left-width: 4px;
            border-left-style: solid;
        }

        .concern-item span {
            font-weight: 500;
        }

        .important-info {
            background-color: #e9ecef;
            padding: 1.25rem;
            border-radius: 8px;
            margin: 2rem 0;
        }

        .btn-analyze {
            background-color: #4169E1;
            border-color: #4169E1;
            border-radius: 25px;
            padding: 0.75rem 2rem;
            font-weight: 500;
        }

        .btn-analyze:hover {
            background-color: #3252a8;
            border-color: #3252a8;
        }

        .divider {
            height: 1px;
            background-color: #dee2e6;
            margin: 2rem 0;
        }

        .inactive-domains {
            background-color: white;
            padding: 1rem;
            border-radius: 8px;
            border: 1px solid #dee2e6;
            margin-bottom: 2rem;
            cursor: pointer;
        }

        .inactive-domains:hover {
            background-color: #f8f9fa;
        }

        .question-container {
            margin-bottom: 1rem;
        }

        .question-text {
            font-size: 0.95rem;
            margin-bottom: 0.25rem;
        }
    </style>
</head>

<body>
    <div class="analyzer-container">
        <div class="form-container">
            <h1 class="text-center mb-4">Your Mental Health Check-In</h1>
            <form id="analyzeForm">
                <div class="mb-3">
                    <label for="textInput" class="form-label">Share your thoughts or feelings below to identify potential mental health concerns:</label>
                    <textarea class="form-control" id="textInput" rows="8"
                        placeholder="Enter your journal entries, thoughts, or any text that describes how you've been feeling lately..."></textarea>
                </div>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-analyze">Analyze My Text</button>
                </div>
            </form>
            <div class="disclaimer mt-3">
                <strong>Note:</strong> This tool is for informational purposes only and does not provide medical advice
                or diagnosis. Please consult with a qualified healthcare provider regarding any mental health concerns.
            </div>
        </div>

        <div class="loader" id="loader"></div>

        <div class="results-container" id="resultsContainer">
            <!-- Header Banner -->
            <div class="header-banner">
                <h2 class="text-white text-center mb-0">Your Mental Health Assessment Results</h2>
            </div>

            <!-- Analysis Summary -->
            <div class="card summary-card">
                <div class="card-body">
                    <h3 class="mb-3">Summary of Your Results</h3>
                    <p>Based on your text, the following significant areas may need attention:</p>
                    <div id="concernsList" class="alert alert-secondary">
                        <p class="text-center">No significant areas of concern were identified in your text.</p>
                    </div>
                    <div class="alert alert-info" role="alert">
                        <p class="mb-0"><strong>Important:</strong> This is not a clinical diagnosis. If you're experiencing distress or have concerns about your mental health, please consult with a healthcare professional.</p>
                    </div>
                </div>
            </div>

            <!-- Domain Results - Main Concerns -->
            <h3 class="mb-3">Detailed Analysis</h3>
            <div class="row g-4 mb-4" id="mainConcerns">
                <!-- Main concern domain cards will be generated here -->
            </div>

            <!-- Domain Results - Other Domains Toggle -->
            <div class="inactive-domains text-center" id="toggleInactiveDomains">
                <h5 class="mb-0">+ View other mental health areas with lower ratings</h5>
            </div>

            <!-- Domain Results - Other Domains -->
            <div class="row g-4" id="otherDomains" style="display: none;">
                <!-- Other domain cards will be generated here -->
            </div>

            <div class="text-center mt-4 mb-3">
                <button id="resetButton" class="btn btn-primary btn-analyze">Start a New Assessment</button>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const analyzeForm = document.getElementById('analyzeForm');
            const textInput = document.getElementById('textInput');
            const resultsContainer = document.getElementById('resultsContainer');
            const loader = document.getElementById('loader');
            const resetButton = document.getElementById('resetButton');
            const mainConcerns = document.getElementById('mainConcerns');
            const otherDomains = document.getElementById('otherDomains');
            const toggleInactiveDomains = document.getElementById('toggleInactiveDomains');
            const concernsList = document.getElementById('concernsList');

            // Color mapping for severity levels
            const severityColors = {
                "None": "#28a745",
                "Slight/Rare": "#17a2b8",
                "Mild": "#ffc107",
                "Moderate": "#fd7e14",
                "Severe": "#dc3545"
            };

            // Toggle display of other domains
            toggleInactiveDomains.addEventListener('click', function() {
                if (otherDomains.style.display === 'none') {
                    otherDomains.style.display = 'flex';
                    toggleInactiveDomains.querySelector('h5').textContent = '- Hide areas with lower ratings';
                } else {
                    otherDomains.style.display = 'none';
                    toggleInactiveDomains.querySelector('h5').textContent = '+ View other mental health areas with lower ratings';
                }
            });

            // Create pie chart for a domain
            function createDomainChart(canvasId, percentage, color) {
                const ctx = document.getElementById(canvasId).getContext('2d');
                
                return new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                            data: [percentage, 100 - percentage],
                            backgroundColor: [
                                color,
                                '#f2f2f2'
                            ],
                            borderWidth: 0
                        }]
                    },
                    options: {
                        cutout: '70%',
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                enabled: false
                            }
                        }
                    }
                });
            }

            // Create domain card with chart and evidence
            function createDomainCard(domain, index) {
                const cardHtml = document.createElement('div');
                cardHtml.className = 'col-md-6';
                
                // Determine if domain should be shown in main concerns or other domains
                const isSignificantConcern = domain.clinical_concern && 
                                        domain.severity !== "Mild" && 
                                        domain.risk_percentage > 25;
                
                const concernClass = domain.clinical_concern ? 'clinical-concern' : '';
                
                let clinicalNotesHtml = '';
                
                cardHtml.innerHTML = `
                    <div class="card domain-card ${concernClass}">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">${domain.name}</h5>
                            <div>
                                <span class="severity-badge" style="background-color: ${domain.severity_color}">${domain.severity}</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="chart-container">
                                        <canvas id="chart-${index}"></canvas>
                                        <div class="chart-percentage">${domain.risk_percentage}%</div>
                                    </div>
                                </div>
                                <div class="col-md-7">
                                    <h6 class="mb-3">Question Scores</h6>
                                    <div class="questions-list">
                                        ${domain.questions.map((question, qIndex) => {
                                            // Check if score exists and is a number, else default to 0
                                            const score = domain.scores && domain.scores[qIndex] !== undefined && !isNaN(domain.scores[qIndex]) 
                                                ? domain.scores[qIndex] 
                                                : 0;
                                            
                                            // Check if evidence exists, else provide default message
                                            const evidence = domain.evidence && domain.evidence[qIndex] 
                                                ? domain.evidence[qIndex]
                                                : "No evidence provided for this question.";
                                            
                                            let scoreColor;
                                            if (score === 0) {
                                                scoreColor = '#6c757d';
                                            } else if (score === 1) {
                                                scoreColor = '#17a2b8';
                                            } else if (score === 2) {
                                                scoreColor = '#ffc107';
                                            } else if (score === 3) {
                                                scoreColor = '#fd7e14';
                                            } else {
                                                scoreColor = '#dc3545';
                                            }
                                            
                                            return `
                                                <div class="question-container">
                                                    <div class="question-text">
                                                        <span class="question-badge" style="background-color: ${scoreColor}">${score}</span>
                                                        ${question}
                                                    </div>
                                                    ${score > 0 ? `<div class="evidence-item">${evidence}</div>` : ''}
                                                </div>
                                            `;
                                        }).join('')}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                // Add to main concerns or other domains based on our criteria
                if (isSignificantConcern) {
                    mainConcerns.appendChild(cardHtml);
                } else {
                    otherDomains.appendChild(cardHtml);
                }
                
                // Create the chart (wait for next tick to ensure canvas is in DOM)
                setTimeout(() => {
                    createDomainChart(`chart-${index}`, domain.risk_percentage, domain.domain_color);
                }, 0);
            }

            // Display clinical concerns
            function displayClinicalConcerns(domains) {
                // Only include significant concerns (not mild or <= 25%)
                const significantConcerns = domains.filter(d => 
                    d.clinical_concern && 
                    d.severity !== "Mild" && 
                    d.risk_percentage > 25
                );
                
                if (significantConcerns.length === 0) {
                    concernsList.innerHTML = `<p class="text-center">No significant areas of concern were identified in your text.</p>`;
                    return;
                }
                
                concernsList.innerHTML = '';
                significantConcerns.forEach(domain => {
                    const concernItem = document.createElement('div');
                    concernItem.className = 'concern-item';
                    concernItem.style.backgroundColor = `${domain.domain_color}10`; // 10% opacity of domain color
                    concernItem.style.borderLeftColor = domain.domain_color;
                    concernItem.innerHTML = `
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="fw-bold">${domain.name}:</span> 
                                Potential concern with ${domain.risk_percentage}% risk level and 
                                a severity of ${domain.severity}
                            </div>
                        </div>
                    `;
                    concernsList.appendChild(concernItem);
                });
            }

            // Check if we have clinical concerns to display toggle
            function checkAndDisplayToggle(domains) {
                // Main concerns are those that are clinical concerns, not mild, and > 25%
                const significantConcerns = domains.filter(d => 
                    d.clinical_concern && 
                    d.severity !== "Mild" && 
                    d.risk_percentage > 25
                );
                
                // Secondary concerns include mild concerns and those <= 25% and non-clinical concerns
                const secondaryConcerns = domains.filter(d => 
                    !(d.clinical_concern && d.severity !== "Mild" && d.risk_percentage > 25)
                );
                
                if (secondaryConcerns.length > 0) {
                    toggleInactiveDomains.style.display = 'block';
                    toggleInactiveDomains.querySelector('h5').textContent = `+ View ${secondaryConcerns.length} other mental health areas with lower ratings`;
                } else {
                    toggleInactiveDomains.style.display = 'none';
                }
            }

            // Handle form submission
            analyzeForm.addEventListener('submit', function (e) {
                e.preventDefault();

                const text = textInput.value.trim();
                if (!text) {
                    alert('Please enter some text to analyze.');
                    return;
                }

                // Show loader, hide results
                loader.style.display = 'block';
                resultsContainer.style.display = 'none';

                // Call API
                fetch('/analyze', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text: text })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Analysis failed');
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Hide loader
                        loader.style.display = 'none';
                        
                        // Clear previous results
                        mainConcerns.innerHTML = '';
                        otherDomains.innerHTML = '';
                        otherDomains.style.display = 'none';
                        
                        // Display clinical concerns
                        displayClinicalConcerns(data.domains);
                        
                        // Create domain cards with charts
                        data.domains.forEach((domain, index) => {
                            createDomainCard(domain, index);
                        });

                        // Check if we need to display the toggle
                        checkAndDisplayToggle(data.domains);

                        // Show results container
                        resultsContainer.style.display = 'block';
                        
                        // Scroll to results
                        resultsContainer.scrollIntoView({ behavior: 'smooth' });
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        loader.style.display = 'none';
                        alert('An error occurred during analysis. Please try again.');
                    });
            });

            // Reset button
            resetButton.addEventListener('click', function () {
                textInput.value = '';
                resultsContainer.style.display = 'none';
                mainConcerns.innerHTML = '';
                otherDomains.innerHTML = '';
                window.scrollTo({ top: 0, behavior: 'smooth' });
            });
        });
    </script>
</body>

</html>

================
File: templates/therapist_dashboard.html
================
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Therapist Dashboard - DSM-5 Assessment Tools</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
            padding-top: 2rem;
            padding-bottom: 2rem;
            font-family: Arial, sans-serif;
        }

        .dashboard-container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .card {
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .card-header {
            border-radius: 10px 10px 0 0;
            background-color: #4169E1;
            color: white;
            padding: 1.25rem;
        }

        .domain-card {
            margin-bottom: 1.5rem;
            height: 100%;
        }

        .domain-card .card-header {
            background-color: #f8f9fa;
            color: #212529;
            border-bottom: none;
            padding: 1rem;
        }

        .domain-card.high-risk .card-header {
            background-color: rgba(220, 53, 69, 0.1);
            border-left: 5px solid #dc3545;
        }

        .chart-container {
            position: relative;
            height: 120px;
            width: 120px;
            margin: 0 auto;
        }

        .chart-percentage {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 1.25rem;
            font-weight: bold;
        }

        .severity-badge {
            display: inline-block;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            color: white;
            font-size: 0.8rem;
            font-weight: 500;
            margin-left: 0.5rem;
        }

        .selected-domain {
            border: 2px solid #4169E1;
            box-shadow: 0 0 10px rgba(65, 105, 225, 0.5);
        }

        .assessment-form {
            display: none;
        }

        .assessment-results {
            display: none;
        }

        .loader {
            display: none;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 2s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }

        .assessment-item {
            padding: 1rem;
            border-radius: 8px;
            background-color: #f8f9fa;
            margin-bottom: 1rem;
        }

        .response-highlight {
            font-weight: 500;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            margin-left: 0.5rem;
        }

        .evidence-item {
            margin-top: 10px;
            padding: 8px 12px;
            background-color: #f8f9fa;
            border-radius: 8px;
            font-style: italic;
            font-size: 0.9rem;
            color: #6c757d;
        }

        .session-notes {
            max-height: 200px;
            overflow-y: auto;
            padding: 1rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            margin-bottom: 1rem;
        }

        .file-list-container {
            max-height: 300px;
            overflow-y: auto;
        }

        .file-item {
            cursor: pointer;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            border-radius: 4px;
            transition: background-color 0.2s;
        }

        .file-item:hover {
            background-color: #e9ecef;
        }

        .file-item.active {
            background-color: rgba(65, 105, 225, 0.1);
            border-left: 3px solid #4169E1;
        }

        .action-btn {
            background-color: #4169E1;
            border-color: #4169E1;
            border-radius: 25px;
            padding: 0.65rem 1.5rem;
            font-weight: 500;
        }

        .action-btn:hover {
            background-color: #3252a8;
            border-color: #3252a8;
        }

        .alert-section {
            padding: 0.75rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }

        .high-risk-alert {
            background-color: rgba(220, 53, 69, 0.1);
            border-left: 5px solid #dc3545;
        }

        .progress-container {
            margin-bottom: 1.5rem;
        }

        .progress-label {
            margin-bottom: 0.5rem;
            display: flex;
            justify-content: space-between;
        }

        /* Adjust file list container for horizontal layout */
        .file-list-container {
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 0.5rem;
        }

        /* Make file items display horizontally */
        .file-list-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .file-item {
            flex-basis: calc(50% - 0.5rem);
            max-width: calc(50% - 0.5rem);
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }

        @media (max-width: 768px) {
            .file-item {
                flex-basis: 100%;
                max-width: 100%;
            }
        }

        /* Adjust domain cards for better flow */
        .domain-card {
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .domain-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            cursor: pointer;
        }

        .domain-card.selected-domain {
            transform: translateY(-3px);
        }

        /* Adjust chart sizes for consistent display */
        .chart-container {
            min-width: 100px;
            min-height: 100px;
        }

        /* Improve assessment items display */
        .assessment-item {
            transition: transform 0.1s;
        }

        .assessment-item:hover {
            transform: translateX(3px);
        }

        /* Add some space between major sections */
        .dashboard-container > .row > .col-12 {
            margin-bottom: 2rem;
        }

        /* Make the progress bars more visible */
        .progress {
            height: 12px;
            border-radius: 6px;
        }

        /* Make sure modals appear on top */
        .modal {
            z-index: 1060;
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Header -->
        <div class="card mb-4">
            <div class="card-header">
                <h2 class="mb-0">Therapist Dashboard</h2>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h4>Patient Assessment Tools</h4>
                        <p>Review Level 1 screening results and conduct Level 2 assessments for specific domains.</p>
                    </div>
                    <div class="col-md-6 text-end">
                        <button class="btn btn-outline-primary me-2" id="viewInstructionsBtn">View Instructions</button>
                        <button class="btn btn-outline-secondary" id="refreshFilesBtn">Refresh Files</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Instructions Modal -->
        <div class="modal fade" id="instructionsModal" tabindex="-1" aria-labelledby="instructionsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="instructionsModalLabel">Therapist Dashboard Instructions</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <h5>Using the Dashboard</h5>
                        <ol>
                            <li><strong>Select a Level 1 Assessment:</strong> Click on any file in the "Level 1 Assessment Results" section to view the patient's initial screening results.</li>
                            <li><strong>Review Domain Scores:</strong> The dashboard will display all domains with their risk percentages and severity levels.</li>
                            <li><strong>Select a Domain for Level 2 Assessment:</strong> Click on any domain card or use the dropdown menu to select a specific domain for deeper assessment.</li>
                            <li><strong>Select a Therapy Session:</strong> Choose a therapy session text file to analyze.</li>
                            <li><strong>Run the Assessment:</strong> Click the "Run Assessment" button to analyze the therapy session text using the appropriate Level 2 assessment tool.</li>
                            <li><strong>Review Results:</strong> The system will display detailed results of the Level 2 assessment, including scores, interpretation, and evidence from the text.</li>
                        </ol>
                        
                        <h5>About the Assessment Tools</h5>
                        <p>This dashboard uses validated clinical assessment tools for each domain:</p>
                        <ul>
                            <li><strong>Depression:</strong> PHQ-9 (Patient Health Questionnaire-9)</li>
                            <li><strong>Anxiety:</strong> GAD-7 (Generalized Anxiety Disorder-7)</li>
                            <li><strong>Suicidal Ideation:</strong> C-SSRS (Columbia-Suicide Severity Rating Scale)</li>
                            <li><strong>Substance Use:</strong> ASSIST (Alcohol, Smoking and Substance Involvement Screening Test)</li>
                            <!-- Other assessment tools -->
                        </ul>
                        
                        <div class="alert alert-info">
                            <strong>Note:</strong> This tool is designed to assist clinical judgment, not replace it. All assessments should be interpreted within the context of your professional clinical evaluation.
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Got it</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="row">
            <!-- Section 1: File Selection -->
            <div class="col-12 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Level 1 Assessment Results</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="file-list-container" id="assessmentFileList">
                                    <!-- Files will be loaded here -->
                                    <div class="text-center py-3">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2">Loading files...</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="alert alert-info">
                                    <h6>Instructions</h6>
                                    <p class="mb-0">Select a Level 1 assessment file to view domain analysis</p>
                                </div>
                                <div id="patientInfoCard" class="card mb-3" style="display: none;">
                                    <div class="card-body">
                                        <h6 class="mb-2">Patient Information</h6>
                                        <p class="mb-0" id="patientInfo">Select a file</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Section 2: Domain Selection -->
            <div class="col-12 mb-4">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Domain Overview</h5>
                    </div>
                    <div class="card-body">
                        <div id="domainSelectionArea">
                            <div class="mb-3">
                                <label for="domainSelect" class="form-label">Assessment Toolkits</label>
                                <select class="form-select" id="domainSelect">
                                    <option value="">Select a domain for Level 2 assessment</option>
                                    <!-- Domain options will be populated here -->
                                </select>
                            </div>

                            <div id="domainCardsContainer">
                                <!-- Domain cards will be displayed here -->
                                <div class="text-center py-5">
                                    <p class="text-muted">Select a Level 1 assessment file to view domains</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Section 3: Level 2 Assessment -->
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">Level 2 Assessment</h5>
                    </div>
                    <div class="card-body">
                        <div id="noSelectionMessage" class="text-center py-5">
                            <p class="text-muted">Select a domain to perform a Level 2 assessment</p>
                        </div>

                        <!-- Assessment Form (Initially Hidden) -->
                        <div id="assessmentForm" class="assessment-form">
                            <h5 id="selectedDomainTitle" class="mb-3">Domain Assessment</h5>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="sessionSelect" class="form-label">Select Therapy Session</label>
                                        <select class="form-select" id="sessionSelect">
                                            <option value="">Select a therapy session</option>
                                            <!-- Session options will be populated here -->
                                        </select>
                                    </div>

                                    <div id="sessionPreview" class="session-notes mb-3" style="display: none;">
                                        <!-- Session text preview will appear here -->
                                    </div>
                                </div>
                                
                                <div class="col-md-6">
                                    <div id="assessmentInfo" class="alert alert-info mt-md-0 mt-3">
                                        <!-- Assessment tool info will be displayed here -->
                                        <p class="mb-0">Select a domain and therapy session to begin</p>
                                    </div>
                                    
                                    <div class="d-grid mt-3">
                                        <button id="runAssessmentBtn" class="btn btn-primary action-btn">Run Assessment</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Loader (Initially Hidden) -->
                        <div id="assessmentLoader" class="loader"></div>

                        <!-- Assessment Results (Initially Hidden) -->
                        <div id="assessmentResults" class="assessment-results">
                            <h5 id="assessmentResultTitle" class="mb-3">Assessment Results</h5>
                            
                            <div id="assessmentSummary" class="alert-section mb-3">
                                <!-- Summary will be displayed here -->
                            </div>

                            <div id="assessmentScoreDisplay" class="progress-container">
                                <!-- Score display will be added here -->
                            </div>

                            <div id="assessmentItems">
                                <!-- Assessment items will be displayed here -->
                            </div>

                            <button id="backToFormBtn" class="btn btn-outline-secondary mt-3">Back to Assessment</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // DOM Elements
            const assessmentFileList = document.getElementById('assessmentFileList');
            const domainSelect = document.getElementById('domainSelect');
            const domainCardsContainer = document.getElementById('domainCardsContainer');
            const selectedDomainTitle = document.getElementById('selectedDomainTitle');
            const sessionSelect = document.getElementById('sessionSelect');
            const sessionPreview = document.getElementById('sessionPreview');
            const assessmentForm = document.getElementById('assessmentForm');
            const assessmentLoader = document.getElementById('assessmentLoader');
            const assessmentResults = document.getElementById('assessmentResults');
            const noSelectionMessage = document.getElementById('noSelectionMessage');
            const assessmentInfo = document.getElementById('assessmentInfo');
            const runAssessmentBtn = document.getElementById('runAssessmentBtn');
            const backToFormBtn = document.getElementById('backToFormBtn');
            const patientInfo = document.getElementById('patientInfo');
            const patientInfoCard = document.getElementById('patientInfoCard');
            const viewInstructionsBtn = document.getElementById('viewInstructionsBtn');
            const refreshFilesBtn = document.getElementById('refreshFilesBtn');
            const assessmentResultTitle = document.getElementById('assessmentResultTitle');
            const assessmentSummary = document.getElementById('assessmentSummary');
            const assessmentScoreDisplay = document.getElementById('assessmentScoreDisplay');
            const assessmentItems = document.getElementById('assessmentItems');

            // Bootstrap modals
            const instructionsModal = new bootstrap.Modal(document.getElementById('instructionsModal'));

            // Assessment tools definitions by domain
            const assessmentTools = {
                "Depression": {
                    name: "PHQ-9 (Patient Health Questionnaire-9)",
                    description: "A 9-item depression scale to assist clinicians with diagnosing depression and monitoring treatment response.",
                    maxScore: 27,
                    interpretation: [
                        { range: [0, 4], level: "Minimal or none", color: "#28a745" },
                        { range: [5, 9], level: "Mild", color: "#17a2b8" },
                        { range: [10, 14], level: "Moderate", color: "#ffc107" },
                        { range: [15, 19], level: "Moderately severe", color: "#fd7e14" },
                        { range: [20, 27], level: "Severe", color: "#dc3545" }
                    ],
                    questions: [
                        "Little interest or pleasure in doing things",
                        "Feeling down, depressed, or hopeless",
                        "Trouble falling/staying asleep, sleeping too much",
                        "Feeling tired or having little energy",
                        "Poor appetite or overeating",
                        "Feeling bad about yourself or that you're a failure or have let yourself or your family down",
                        "Trouble concentrating on things, such as reading the newspaper or watching television",
                        "Moving or speaking so slowly that other people could have noticed, or the opposite—being so fidgety or restless that you have been moving around a lot more than usual",
                        "Thoughts that you would be better off dead or of hurting yourself in some way"
                    ]
                },
                "Anxiety": {
                    name: "GAD-7 (Generalized Anxiety Disorder-7)",
                    description: "A 7-item anxiety scale to screen for and measure the severity of generalized anxiety disorder.",
                    maxScore: 21,
                    interpretation: [
                        { range: [0, 4], level: "Minimal anxiety", color: "#28a745" },
                        { range: [5, 9], level: "Mild anxiety", color: "#17a2b8" },
                        { range: [10, 14], level: "Moderate anxiety", color: "#ffc107" },
                        { range: [15, 21], level: "Severe anxiety", color: "#dc3545" }
                    ],
                    questions: [
                        "Feeling nervous, anxious, or on edge",
                        "Not being able to stop or control worrying",
                        "Worrying too much about different things",
                        "Trouble relaxing",
                        "Being so restless that it's hard to sit still",
                        "Becoming easily annoyed or irritable",
                        "Feeling afraid as if something awful might happen"
                    ]
                },
                "Suicidal Ideation": {
                    name: "C-SSRS (Columbia-Suicide Severity Rating Scale)",
                    description: "A tool that helps identify whether someone is at risk for suicide.",
                    maxScore: 25,
                    interpretation: [
                        { range: [0, 5], level: "Low risk", color: "#28a745" },
                        { range: [6, 15], level: "Moderate risk", color: "#ffc107" },
                        { range: [16, 25], level: "High risk", color: "#dc3545" }
                    ],
                    questions: [
                        "Have you wished you were dead or wished you could go to sleep and not wake up?",
                        "Have you actually had any thoughts about killing yourself?",
                        "Have you thought about how you might kill yourself?",
                        "Have you had any intention of acting on these thoughts?",
                        "Have you made a plan for a suicide attempt?"
                    ]
                },
                "Anger": {
                    name: "PROMIS Anger",
                    description: "A measure for evaluating anger in adults.",
                    maxScore: 40,
                    interpretation: [
                        { range: [0, 13], level: "Low anger", color: "#28a745" },
                        { range: [14, 26], level: "Moderate anger", color: "#ffc107" },
                        { range: [27, 40], level: "High anger", color: "#dc3545" }
                    ],
                    questions: [
                        "I felt angry",
                        "I felt like I was ready to explode",
                        "I was grouchy",
                        "I felt annoyed",
                        "I felt like I needed to let out my anger",
                        "I had trouble controlling my temper",
                        "I felt like yelling at someone",
                        "I felt like breaking things"
                    ]
                },
                "Mania": {
                    name: "Altman Self-Rating Mania Scale (ASRM)",
                    description: "A 5-item self-rating mania scale to assess the presence and severity of manic symptoms.",
                    maxScore: 20,
                    interpretation: [
                        { range: [0, 5], level: "No indication of mania", color: "#28a745" },
                        { range: [6, 10], level: "Possible hypomania", color: "#ffc107" },
                        { range: [11, 20], level: "High probability of mania", color: "#dc3545" }
                    ],
                    questions: [
                        "Elevated/Euphoric Mood: Happiness, optimism, self-confidence",
                        "Increased Motor Activity/Energy: More energy, more active, more restless",
                        "Sexual Interest: More sexual interest, more sexual thoughts, sexual activity",
                        "Sleep: Less need for sleep than usual",
                        "Irritability: More irritable, more argumentative, less tolerant"
                    ]
                },
                "Somatic Symptoms": {
                    name: "PHQ-15 (Patient Health Questionnaire-15)",
                    description: "A 15-item somatic symptom scale to screen for somatization and to monitor somatic symptom severity.",
                    maxScore: 30,
                    interpretation: [
                        { range: [0, 4], level: "Minimal somatic symptoms", color: "#28a745" },
                        { range: [5, 9], level: "Low somatic symptoms", color: "#17a2b8" },
                        { range: [10, 14], level: "Medium somatic symptoms", color: "#ffc107" },
                        { range: [15, 30], level: "High somatic symptoms", color: "#dc3545" }
                    ],
                    questions: [
                        "Stomach pain",
                        "Back pain",
                        "Pain in your arms, legs, or joints",
                        "Menstrual cramps or other problems with your periods (women only)",
                        "Headaches",
                        "Chest pain",
                        "Dizziness",
                        "Fainting spells",
                        "Feeling your heart pound or race",
                        "Shortness of breath",
                        "Pain or problems during sexual intercourse",
                        "Constipation, loose bowels, or diarrhea",
                        "Nausea, gas, or indigestion",
                        "Feeling tired or having low energy",
                        "Trouble sleeping"
                    ]
                },
                "Psychosis": {
                    name: "PRIME Screen-Revised",
                    description: "A 12-item self-report screen designed to identify individuals who may be experiencing early signs of psychosis.",
                    maxScore: 24,
                    interpretation: [
                        { range: [0, 6], level: "Low likelihood of psychosis risk", color: "#28a745" },
                        { range: [7, 13], level: "Possible psychosis risk", color: "#ffc107" },
                        { range: [14, 24], level: "High likelihood of psychosis risk", color: "#dc3545" }
                    ],
                    questions: [
                        "I think that I have felt that there are odd or unusual things going on that I can't explain.",
                        "I think that I might be able to predict the future.",
                        "I may have felt that there could possibly be something interrupting or controlling my thoughts, feelings, or actions.",
                        "I have had the experience of doing something differently because of my superstitions.",
                        "I think that I may get confused at times whether something I experience or perceive may be real or may be just part of my imagination or dreams.",
                        "I have thought that it might be possible that other people can read my mind, or that I can read others' minds."
                    ]
                },
                "Sleep Problems": {
                    name: "ISI (Insomnia Severity Index)",
                    description: "A 7-item self-report questionnaire assessing the nature, severity, and impact of insomnia.",
                    maxScore: 28,
                    interpretation: [
                        { range: [0, 7], level: "No clinically significant insomnia", color: "#28a745" },
                        { range: [8, 14], level: "Subthreshold insomnia", color: "#17a2b8" },
                        { range: [15, 21], level: "Moderate clinical insomnia", color: "#ffc107" },
                        { range: [22, 28], level: "Severe clinical insomnia", color: "#dc3545" }
                    ],
                    questions: [
                        "Difficulty falling asleep",
                        "Difficulty staying asleep",
                        "Problems waking up too early",
                        "How satisfied/dissatisfied are you with your current sleep pattern?",
                        "How noticeable to others do you think your sleep problem is in terms of impairing the quality of your life?",
                        "How worried/distressed are you about your current sleep problem?",
                        "To what extent do you consider your sleep problem to interfere with your daily functioning currently?"
                    ]
                },
                "Memory": {
                    name: "PROMIS Cognitive Function",
                    description: "A measure of perceived cognitive abilities.",
                    maxScore: 40,
                    interpretation: [
                        { range: [0, 13], level: "Severe cognitive concerns", color: "#dc3545" },
                        { range: [14, 26], level: "Moderate cognitive concerns", color: "#ffc107" },
                        { range: [27, 40], level: "Minimal cognitive concerns", color: "#28a745" }
                    ],
                    questions: [
                        "I have had to work harder than usual to keep track of what I was doing",
                        "I have had trouble shifting back and forth between different activities that require thinking",
                        "My thinking has been slow",
                        "I have had trouble forming thoughts",
                        "I have had trouble adding or subtracting numbers in my head",
                        "I have had trouble figuring out what I meant to do once I got there",
                        "I have had trouble finding my way to a familiar place",
                        "I have had trouble concentrating"
                    ]
                },
                "Repetitive Thoughts and Behaviors": {
                    name: "FOCI (Florida Obsessive-Compulsive Inventory)",
                    description: "A self-report measure of obsessive-compulsive symptoms.",
                    maxScore: 20,
                    interpretation: [
                        { range: [0, 7], level: "Minimal OCD symptoms", color: "#28a745" },
                        { range: [8, 13], level: "Moderate OCD symptoms", color: "#ffc107" },
                        { range: [14, 20], level: "Severe OCD symptoms", color: "#dc3545" }
                    ],
                    questions: [
                        "Time occupied by obsessive thoughts",
                        "Interference from obsessive thoughts",
                        "Distress from obsessive thoughts",
                        "Resistance to obsessive thoughts",
                        "Control over obsessive thoughts",
                        "Time spent performing compulsive behaviors",
                        "Interference from compulsive behaviors",
                        "Distress from compulsive behaviors",
                        "Resistance to compulsive behaviors",
                        "Control over compulsive behaviors"
                    ]
                },
                "Dissociation": {
                    name: "DES-II (Dissociative Experiences Scale)",
                    description: "A 28-item self-report measure of dissociative symptoms.",
                    maxScore: 40,
                    interpretation: [
                        { range: [0, 10], level: "Normal range", color: "#28a745" },
                        { range: [11, 20], level: "Mild dissociation", color: "#17a2b8" },
                        { range: [21, 30], level: "Moderate dissociation", color: "#ffc107" },
                        { range: [31, 40], level: "Severe dissociation", color: "#dc3545" }
                    ],
                    questions: [
                        "Some people have the experience of finding themselves in a place and having no idea how they got there.",
                        "Some people have the experience of finding themselves dressed in clothes that they don't remember putting on.",
                        "Some people have the experience of finding new things among their belongings that they do not remember buying.",
                        "Some people sometimes find that they are approached by people that they do not know who call them by another name or insist that they have met them before.",
                        "Some people have the experience of feeling as though they are standing next to themselves or watching themselves do something and they actually see themselves as if they were looking at another person."
                    ]
                },
                "Personality Functioning": {
                    name: "PID-5 (Personality Inventory for DSM-5)",
                    description: "A self-rated personality trait assessment scale for adults.",
                    maxScore: 40,
                    interpretation: [
                        { range: [0, 13], level: "Low personality dysfunction", color: "#28a745" },
                        { range: [14, 26], level: "Moderate personality dysfunction", color: "#ffc107" },
                        { range: [27, 40], level: "High personality dysfunction", color: "#dc3545" }
                    ],
                    questions: [
                        "I don't get as much pleasure out of things as others seem to.",
                        "I feel like I act totally on impulse.",
                        "I often have thoughts that make sense to me but that other people say are strange.",
                        "I avoid risky situations.",
                        "It's no big deal if I hurt other people's feelings.",
                        "I rarely get enthusiastic about anything.",
                        "I go out of my way to avoid any kind of conflict.",
                        "I'm inflexible in my ways, even when it would clearly be to my advantage to change."
                    ]
                },
                "Substance Use": {
                    name: "ASSIST (Alcohol, Smoking and Substance Involvement Screening Test)",
                    description: "A screening test to assess use of psychoactive substances.",
                    maxScore: 39,
                    interpretation: [
                        { range: [0, 10], level: "Low risk", color: "#28a745" },
                        { range: [11, 26], level: "Moderate risk", color: "#ffc107" },
                        { range: [27, 39], level: "High risk", color: "#dc3545" }
                    ],
                    questions: [
                        "In your life, which of the following substances have you ever used?",
                        "In the past three months, how often have you used the substances you mentioned?",
                        "In the past three months, how often have you had a strong desire or urge to use?",
                        "In the past three months, how often has your use of substances led to health, social, legal, or financial problems?",
                        "In the past three months, how often have you failed to do what was normally expected of you because of your use of substances?",
                        "Has a friend or relative or anyone else ever expressed concern about your use of substances?",
                        "Have you ever tried and failed to control, cut down or stop using substances?"
                    ]
                }
            };

            // Global state
            let selectedDomain = null;
            let selectedFile = null;
            let selectedSession = null;
            let domainData = [];

            // Show instructions modal button
            viewInstructionsBtn.addEventListener('click', function() {
                instructionsModal.show();
            });

            // Refresh files button
            refreshFilesBtn.addEventListener('click', function() {
                loadAssessmentFiles();
            });

            // Load assessment files
            function loadAssessmentFiles() {
                assessmentFileList.innerHTML = `
                    <div class="text-center py-3">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Loading files...</p>
                    </div>
                `;

                // Fetch list of assessment files
                fetch('/api/assessment-files')
                    .then(response => response.json())
                    .then(data => {
                        if (data.files && data.files.length > 0) {
                            displayFileList(data.files);
                        } else {
                            assessmentFileList.innerHTML = `
                                <div class="text-center py-3">
                                    <p class="text-muted">No assessment files found</p>
                                </div>
                            `;
                        }
                    })
                    .catch(error => {
                        console.error('Error loading files:', error);
                        assessmentFileList.innerHTML = `
                            <div class="alert alert-danger">
                                Error loading files. Please try again.
                            </div>
                        `;
                    });
            }

            // Display file list
            function displayFileList(files) {
                assessmentFileList.innerHTML = '';
                
                files.forEach(file => {
                    const fileItem = document.createElement('div');
                    fileItem.className = 'file-item';
                    fileItem.dataset.file = file;
                    
                    // Extract date and time from filename
                    const dateMatch = file.match(/\d{8}_\d{6}/);
                    let displayName = file;
                    
                    if (dateMatch) {
                        const dateStr = dateMatch[0];
                        const year = dateStr.substring(0, 4);
                        const month = dateStr.substring(4, 6);
                        const day = dateStr.substring(6, 8);
                        const hour = dateStr.substring(9, 11);
                        const minute = dateStr.substring(11, 13);
                        
                        const date = new Date(year, month-1, day, hour, minute);
                        displayName = `Assessment - ${date.toLocaleDateString()} ${date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}`;
                    }
                    
                    fileItem.innerHTML = `
                        <div class="d-flex align-items-center">
                            <div>
                                <i class="bi bi-file-text me-2"></i>
                                <span>${displayName}</span>
                            </div>
                        </div>
                    `;
                    
                    fileItem.addEventListener('click', function() {
                        // Remove active class from all file items
                        document.querySelectorAll('.file-item').forEach(item => {
                            item.classList.remove('active');
                        });
                        
                        // Add active class to selected file
                        this.classList.add('active');
                        
                        // Set selected file
                        selectedFile = this.dataset.file;
                        
                        // Load file data
                        loadFileData(selectedFile);
                    });
                    
                    assessmentFileList.appendChild(fileItem);
                });
            }

            // Load file data
            function loadFileData(file) {
                fetch(`/api/assessment-data?file=${file}`)
                    .then(response => response.json())
                    .then(data => {
                        // Update patient info
                        const dateMatch = file.match(/\d{8}/);
                        let dateStr = "";
                        
                        if (dateMatch) {
                            const year = dateMatch[0].substring(0, 4);
                            const month = dateMatch[0].substring(4, 6);
                            const day = dateMatch[0].substring(6, 8);
                            
                            dateStr = new Date(year, month-1, day).toLocaleDateString();
                        }
                        
                        patientInfo.textContent = `Assessment from ${dateStr}`;
                        patientInfoCard.style.display = 'block';
                        
                        // Process domain data
                        domainData = data.domains;
                        
                        // Display domain cards
                        displayDomainCards(domainData);
                        
                        // Populate domain select dropdown
                        populateDomainSelect(domainData);
                    })
                    .catch(error => {
                        console.error('Error loading file data:', error);
                        domainCardsContainer.innerHTML = `
                            <div class="alert alert-danger">
                                Error loading file data. Please try again.
                            </div>
                        `;
                    });
            }

            // Display domain cards
            function displayDomainCards(domains) {
                domainCardsContainer.innerHTML = '';
                
                // Sort domains by risk percentage (highest first)
                domains.sort((a, b) => b.risk_percentage - a.risk_percentage);
                
                // Create a row for the cards
                const row = document.createElement('div');
                row.className = 'row';
                domainCardsContainer.appendChild(row);
                
                domains.forEach(domain => {
                    const cardCol = document.createElement('div');
                    cardCol.className = 'col-lg-4 col-md-6 mb-3'; // Three cards per row on large screens, two on medium
                    
                    const isHighRisk = domain.risk_percentage >= 50;
                    
                    const card = document.createElement('div');
                    card.className = `card domain-card ${isHighRisk ? 'high-risk' : ''}`;
                    card.dataset.domain = domain.name;
                    
                    let severityColor = "#28a745"; // Default green
                    
                    // Set severity color
                    switch (domain.severity) {
                        case "None":
                            severityColor = "#28a745"; // Green
                            break;
                        case "Slight/Rare":
                            severityColor = "#17a2b8"; // Teal
                            break;
                        case "Mild":
                            severityColor = "#ffc107"; // Yellow
                            break;
                        case "Moderate":
                            severityColor = "#fd7e14"; // Orange
                            break;
                        case "Severe":
                            severityColor = "#dc3545"; // Red
                            break;
                    }
                    
                    card.innerHTML = `
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">${domain.name}</h6>
                            <span class="severity-badge" style="background-color: ${severityColor}">${domain.severity}</span>
                        </div>
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="chart-container me-3">
                                    <canvas id="chart-${domain.name.replace(/\s+/g, '-')}"></canvas>
                                    <div class="chart-percentage">${domain.risk_percentage}%</div>
                                </div>
                                <div>
                                    <p class="mb-1"><small>Total Score: ${domain.total}</small></p>
                                    <p class="mb-0">
                                        <small class="text-muted">Click to select for Level 2 assessment</small>
                                    </p>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    card.addEventListener('click', function() {
                        selectDomain(domain.name);
                    });
                    
                    cardCol.appendChild(card);
                    row.appendChild(cardCol);
                    
                    // Create chart
                    setTimeout(() => {
                        const ctx = document.getElementById(`chart-${domain.name.replace(/\s+/g, '-')}`).getContext('2d');
                        const chart = new Chart(ctx, {
                            type: 'doughnut',
                            data: {
                                datasets: [{
                                    data: [domain.risk_percentage, 100 - domain.risk_percentage],
                                    backgroundColor: [
                                        severityColor,
                                        '#f2f2f2'
                                    ],
                                    borderWidth: 0
                                }]
                            },
                            options: {
                                cutout: '70%',
                                responsive: true,
                                maintainAspectRatio: false,
                                plugins: {
                                    legend: {
                                        display: false
                                    },
                                    tooltip: {
                                        enabled: false
                                    }
                                }
                            }
                        });
                    }, 0);
                });
            }

            // Populate domain select dropdown
            function populateDomainSelect(domains) {
                // Clear existing options except the first one
                while (domainSelect.options.length > 1) {
                    domainSelect.remove(1);
                }
                
                // Sort domains by risk percentage (highest first)
                domains.sort((a, b) => b.risk_percentage - a.risk_percentage);
                
                // Create optgroup for high-risk domains (>= 50%)
                const highRiskOptgroup = document.createElement('optgroup');
                highRiskOptgroup.label = 'High Risk Domains';
                
                // Create optgroup for other domains
                const otherOptgroup = document.createElement('optgroup');
                otherOptgroup.label = 'Other Domains';
                
                // Add options to optgroups
                domains.forEach(domain => {
                    const option = document.createElement('option');
                    option.value = domain.name;
                    option.textContent = `${domain.name} (${domain.risk_percentage}%)`;
                    
                    if (domain.risk_percentage >= 50) {
                        highRiskOptgroup.appendChild(option);
                    } else {
                        otherOptgroup.appendChild(option);
                    }
                });
                
                // Add optgroups to select
                if (highRiskOptgroup.childElementCount > 0) {
                    domainSelect.appendChild(highRiskOptgroup);
                }
                
                if (otherOptgroup.childElementCount > 0) {
                    domainSelect.appendChild(otherOptgroup);
                }
            }

            // Select domain for assessment
            function selectDomain(domainName) {
                // Set selected domain
                selectedDomain = domainName;
                
                // Update domain select dropdown
                domainSelect.value = domainName;
                
                // Update selected domain in UI
                document.querySelectorAll('.domain-card').forEach(card => {
                    if (card.dataset.domain === domainName) {
                        card.classList.add('selected-domain');
                    } else {
                        card.classList.remove('selected-domain');
                    }
                });
                
                // Update assessment form
                selectedDomainTitle.textContent = `${domainName} Assessment`;
                
                // Update assessment info
                const tool = assessmentTools[domainName];
                if (tool) {
                    assessmentInfo.innerHTML = `
                        <h6>${tool.name}</h6>
                        <p>${tool.description}</p>
                        <small>This assessment contains ${tool.questions.length} questions. Select a therapy session to begin.</small>
                    `;
                } else {
                    assessmentInfo.innerHTML = `
                        <p class="mb-0">Select a therapy session to begin assessment for ${domainName}</p>
                    `;
                }
                
                // Show assessment form, hide no selection message
                noSelectionMessage.style.display = 'none';
                assessmentForm.style.display = 'block';
                assessmentResults.style.display = 'none';
                
                // Load therapy sessions
                loadTherapySessions();
            }

            // Load therapy session files
            function loadTherapySessions() {
                // Fetch list of therapy session files
                fetch('/api/therapy-sessions')
                    .then(response => response.json())
                    .then(data => {
                        // Clear existing options
                        while (sessionSelect.options.length > 1) {
                            sessionSelect.remove(1);
                        }
                        
                        if (data.files && data.files.length > 0) {
                            data.files.forEach(file => {
                                const option = document.createElement('option');
                                option.value = file;
                                
                                // Format display name
                                const dateMatch = file.match(/\d{8}/);
                                let displayName = file;
                                
                                if (dateMatch) {
                                    const dateStr = dateMatch[0];
                                    const year = dateStr.substring(0, 4);
                                    const month = dateStr.substring(4, 6);
                                    const day = dateStr.substring(6, 8);
                                    
                                    const date = new Date(year, month-1, day);
                                    displayName = `Session - ${date.toLocaleDateString()}`;
                                }
                                
                                option.textContent = displayName;
                                sessionSelect.appendChild(option);
                            });
                        } else {
                            const option = document.createElement('option');
                            option.disabled = true;
                            option.textContent = 'No therapy sessions available';
                            sessionSelect.appendChild(option);
                        }
                    })
                    .catch(error => {
                        console.error('Error loading therapy sessions:', error);
                        const option = document.createElement('option');
                        option.disabled = true;
                        option.textContent = 'Error loading therapy sessions';
                        sessionSelect.appendChild(option);
                    });
            }

            // Session select change event
            sessionSelect.addEventListener('change', function() {
                selectedSession = this.value;
                
                if (selectedSession) {
                    // Load session preview
                    fetch(`/api/therapy-session?file=${selectedSession}`)
                        .then(response => response.json())
                        .then(data => {
                            if (data.content) {
                                // Show preview
                                sessionPreview.style.display = 'block';
                                sessionPreview.innerHTML = `<p><strong>Preview:</strong></p><p>${data.content.substring(0, 200)}...</p>`;
                            } else {
                                sessionPreview.style.display = 'none';
                            }
                        })
                        .catch(error => {
                            console.error('Error loading session preview:', error);
                            sessionPreview.style.display = 'none';
                        });
                } else {
                    sessionPreview.style.display = 'none';
                }
            });

            // Domain select change event
            domainSelect.addEventListener('change', function() {
                if (this.value) {
                    selectDomain(this.value);
                }
            });

            // Run assessment button
            runAssessmentBtn.addEventListener('click', function() {
                if (!selectedDomain) {
                    alert('Please select a domain first.');
                    return;
                }
                
                if (!selectedSession) {
                    alert('Please select a therapy session first.');
                    return;
                }
                
                // Hide form, show loader
                assessmentForm.style.display = 'none';
                assessmentLoader.style.display = 'block';
                
                // Call API to run assessment
                fetch('/api/run-assessment', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        domain: selectedDomain,
                        session: selectedSession,
                        tool: assessmentTools[selectedDomain].name
                    })
                })
                    .then(response => {
                        // First check if response is ok (status in 200-299 range)
                        if (!response.ok) {
                            throw new Error(`Server responded with status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Hide loader
                        assessmentLoader.style.display = 'none';
                        
                        // Check for error in the response
                        if (data.error) {
                            throw new Error(data.error);
                        }
                        
                        // Validate the data structure
                        if (!data || !Array.isArray(data.scores)) {
                            throw new Error('Invalid response format from server');
                        }
                        
                        // Display results
                        displayAssessmentResults(data);
                    })
                    .catch(error => {
                        console.error('Error running assessment:', error);
                        
                        // Hide loader
                        assessmentLoader.style.display = 'none';
                        
                        // Display error message
                        assessmentItems.innerHTML = `
                            <div class="alert alert-danger">
                                <h6>Error Running Assessment</h6>
                                <p>${error.message || 'An unknown error occurred while running the assessment.'}</p>
                                <p class="mb-0">Please try again or select a different session.</p>
                            </div>
                        `;
                        
                        // Show results container with error
                        assessmentResults.style.display = 'block';
                    });
            });

            // Back to form button
            backToFormBtn.addEventListener('click', function() {
                assessmentResults.style.display = 'none';
                assessmentForm.style.display = 'block';
            });

            // Display assessment results
            function displayAssessmentResults(results) {
                // Check if results is null or undefined
                if (!results) {
                    // Display error message
                    assessmentLoader.style.display = 'none';
                    assessmentItems.innerHTML = `
                        <div class="alert alert-danger">
                            <h6>Error Processing Results</h6>
                            <p>No assessment results were returned. Please try again or select a different session.</p>
                        </div>
                    `;
                    assessmentResults.style.display = 'block';
                    return;
                }

                // Check if scores array exists
                if (!results.scores || !Array.isArray(results.scores)) {
                    // Display error message
                    assessmentLoader.style.display = 'none';
                    assessmentItems.innerHTML = `
                        <div class="alert alert-danger">
                            <h6>Invalid Results Format</h6>
                            <p>The assessment results were not in the expected format. Please try again.</p>
                            <pre class="mt-3 p-2 bg-light">${JSON.stringify(results, null, 2)}</pre>
                        </div>
                    `;
                    assessmentResults.style.display = 'block';
                    return;
                }

                // Set title
                assessmentResultTitle.textContent = `${selectedDomain} Assessment Results`;
                
                // Get assessment tool
                const tool = assessmentTools[selectedDomain];
                if (!tool) {
                    assessmentLoader.style.display = 'none';
                    assessmentItems.innerHTML = `
                        <div class="alert alert-danger">
                            <h6>Configuration Error</h6>
                            <p>No assessment tool configuration found for ${selectedDomain}.</p>
                        </div>
                    `;
                    assessmentResults.style.display = 'block';
                    return;
                }
                
                // Calculate total score (safely)
                const totalScore = results.scores.reduce((a, b) => a + (Number.isFinite(b) ? b : 0), 0);
                
                // Determine severity level with proper fallback
                let severityLevel = null;
                
                // First try to find the matching severity level
                for (const level of tool.interpretation) {
                    if (totalScore >= level.range[0] && totalScore <= level.range[1]) {
                        severityLevel = level;
                        break;
                    }
                }
                
                // If no matching level found, use default values
                if (!severityLevel) {
                    console.warn(`No severity level found for score ${totalScore} in domain ${selectedDomain}`);
                    // Use default values
                    severityLevel = {
                        level: "Unknown",
                        color: "#6c757d", // Grey as default
                        description: "Score outside expected range"
                    };
                    
                    // Find the closest range
                    let closestLevel = tool.interpretation[0];
                    let minDistance = Math.abs(totalScore - (tool.interpretation[0].range[0] + tool.interpretation[0].range[1]) / 2);
                    
                    for (const level of tool.interpretation) {
                        const levelMidpoint = (level.range[0] + level.range[1]) / 2;
                        const distance = Math.abs(totalScore - levelMidpoint);
                        
                        if (distance < minDistance) {
                            closestLevel = level;
                            minDistance = distance;
                        }
                    }
                    
                    // If score is above all ranges, use the highest severity
                    if (totalScore > tool.interpretation[tool.interpretation.length - 1].range[1]) {
                        severityLevel = {...tool.interpretation[tool.interpretation.length - 1]};
                        severityLevel.level += " (score above range)";
                    } 
                    // If score is below all ranges, use the lowest severity
                    else if (totalScore < tool.interpretation[0].range[0]) {
                        severityLevel = {...tool.interpretation[0]};
                        severityLevel.level += " (score below range)";
                    }
                    // Otherwise use the closest level
                    else {
                        severityLevel = {...closestLevel};
                        severityLevel.level += " (approximate)";
                    }
                }
                
                // Display summary
                assessmentSummary.className = 'alert-section';
                assessmentSummary.style.borderLeft = `5px solid ${severityLevel.color}`;
                assessmentSummary.style.backgroundColor = `${severityLevel.color}10`;
                
                assessmentSummary.innerHTML = `
                    <h6>Assessment Summary: ${tool.name}</h6>
                    <p class="mb-1">Total Score: <strong>${totalScore}/${tool.maxScore}</strong></p>
                    <p class="mb-1">Interpretation: <strong>${severityLevel.level}</strong></p>
                    <p class="mb-0">Based on analysis of therapy session: ${selectedSession}</p>
                `;
                
                // Display score
                const scorePercentage = (totalScore / tool.maxScore) * 100;
                
                assessmentScoreDisplay.innerHTML = `
                    <div class="progress-label">
                        <span>Score: ${totalScore}/${tool.maxScore}</span>
                        <span>${Math.round(scorePercentage)}%</span>
                    </div>
                    <div class="progress" style="height: 10px;">
                        <div class="progress-bar" role="progressbar" style="width: ${scorePercentage}%; background-color: ${severityLevel.color};" aria-valuenow="${scorePercentage}" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                `;
                
                // Display assessment items
                assessmentItems.innerHTML = '';
                
                // Ensure results.evidence exists and is an array
                const evidence = Array.isArray(results.evidence) ? results.evidence : [];
                
                tool.questions.forEach((question, index) => {
                    const score = index < results.scores.length ? (Number.isFinite(results.scores[index]) ? results.scores[index] : 0) : 0;
                    const evidenceText = index < evidence.length ? (evidence[index] || 'No specific evidence found.') : 'No specific evidence found.';
                    
                    let responseColor;
                    if (score === 0) {
                        responseColor = '#28a745'; // Green
                    } else if (score === 1) {
                        responseColor = '#17a2b8'; // Teal
                    } else if (score === 2) {
                        responseColor = '#ffc107'; // Yellow
                    } else if (score === 3) {
                        responseColor = '#fd7e14'; // Orange
                    } else {
                        responseColor = '#dc3545'; // Red
                    }
                    
                    const itemElement = document.createElement('div');
                    itemElement.className = 'assessment-item';
                    itemElement.style.borderLeft = `3px solid ${responseColor}`;
                    
                    itemElement.innerHTML = `
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <div>
                                <strong>Q${index + 1}:</strong> ${question}
                            </div>
                            <div>
                                <span class="response-highlight" style="background-color: ${responseColor}10; color: ${responseColor}; border: 1px solid ${responseColor}">Score: ${score}</span>
                            </div>
                        </div>
                        <div class="evidence-item">${evidenceText}</div>
                    `;
                    
                    assessmentItems.appendChild(itemElement);
                });
                
                // Show results
                assessmentResults.style.display = 'block';
            }

            // Initialize
            loadAssessmentFiles();
        });
    </script>
</body>

</html>

================
File: text_processing.py
================
import re

def preprocess_text(text):
    """Enhanced preprocessing for mental health text analysis."""
    
    # Initial cleanup - remove excessive whitespace
    text = re.sub(r'\s+', ' ', text).strip()
    
    # Check if the text appears to be in a chat format
    chat_patterns = [
        r'^(User|Patient|Me):', 
        r'\n(User|Patient|Me):',
        r'^\[\d{2}:\d{2}\]'  # Common timestamp pattern
    ]
    
    is_chat_format = any(re.search(pattern, text) for pattern in chat_patterns)
    
    if is_chat_format:
        # Split into segments based on speaker indicators
        segments = re.split(r'\n(?=(?:User|Patient|Me|Therapist|Doctor):)', text)
        
        # Process each segment to remove speaker labels but preserve content
        processed_segments = []
        current_speaker = None
        
        for segment in segments:
            # Extract speaker and content
            speaker_match = re.match(r'^(User|Patient|Me|Therapist|Doctor):\s*(.*)', segment, re.DOTALL)
            
            if speaker_match:
                speaker, content = speaker_match.groups()
                current_speaker = speaker
                processed_segments.append(content.strip())
            else:
                # No speaker label, but continue with previous speaker
                processed_segments.append(segment.strip())
        
        # Join all segments with proper punctuation and spacing
        processed_text = ""
        for i, segment in enumerate(processed_segments):
            # Ensure proper punctuation at the end of each segment
            if not segment.endswith(('.', '?', '!')):
                segment += '.'
            
            # Add the segment to the processed text
            if i == 0:
                processed_text = segment
            else:
                processed_text += " " + segment
    else:
        # Not a chat format, just clean up the text
        processed_text = text
        
        # Fix common punctuation issues
        processed_text = re.sub(r'\.{2,}', '.', processed_text)  # Replace multiple periods
        processed_text = re.sub(r'\s+([.,;:!?])', r'\1', processed_text)  # Fix spacing before punctuation
    
    # Normalize emotional indicators often seen in chats
    emoji_map = {
        r':[\(\[]': " feeling sad ",
        r':[\)\]]': " feeling happy ",
        r':\|': " feeling neutral ",
        r':\S': " feeling emotional "
    }
    
    for pattern, replacement in emoji_map.items():
        processed_text = re.sub(pattern, replacement, processed_text)
    
    return processed_text

================
File: therapist_routes.py
================
# Import necessary modules
import os
import json
import re
import traceback
import logging
from datetime import datetime
from flask import render_template, request, jsonify
import requests
from text_processing import preprocess_text

# Define DSM-5 Level 2 assessment tools mapping
DSM5_LEVEL2_TOOLS = {
    "Depression": {
        "name": "PHQ-9 (Patient Health Questionnaire-9)",
        "description": "A 9-item depression scale to assist clinicians with diagnosing depression and monitoring treatment response.",
        "max_score": 27,
        "threshold": 10,
        "questions": [
            "Little interest or pleasure in doing things",
            "Feeling down, depressed, or hopeless",
            "Trouble falling/staying asleep, sleeping too much",
            "Feeling tired or having little energy",
            "Poor appetite or overeating",
            "Feeling bad about yourself or that you're a failure or have let yourself or your family down",
            "Trouble concentrating on things, such as reading the newspaper or watching television",
            "Moving or speaking so slowly that other people could have noticed, or the opposite—being so fidgety or restless that you have been moving around a lot more than usual",
            "Thoughts that you would be better off dead or of hurting yourself in some way"
        ],
        "scoring": [
            {"range": [0, 4], "level": "None to minimal depression", "description": "Monitor; may not require treatment"},
            {"range": [5, 9], "level": "Mild depression", "description": "Watchful waiting; consider counseling, follow-up"},
            {"range": [10, 14], "level": "Moderate depression", "description": "Treatment plan, counseling, follow-up"},
            {"range": [15, 19], "level": "Moderately severe depression", "description": "Active treatment with pharmacotherapy and/or psychotherapy"},
            {"range": [20, 27], "level": "Severe depression", "description": "Immediate initiation of pharmacotherapy and, if severe impairment or poor response to therapy, expedited referral to a mental health specialist"}
        ]
    },
    "Anxiety": {
        "name": "GAD-7 (Generalized Anxiety Disorder-7)",
        "description": "A 7-item anxiety scale to screen for and measure the severity of generalized anxiety disorder.",
        "max_score": 21,
        "threshold": 10,
        "questions": [
            "Feeling nervous, anxious, or on edge",
            "Not being able to stop or control worrying",
            "Worrying too much about different things",
            "Trouble relaxing",
            "Being so restless that it's hard to sit still",
            "Becoming easily annoyed or irritable",
            "Feeling afraid as if something awful might happen"
        ],
        "scoring": [
            {"range": [0, 4], "level": "Minimal anxiety", "description": "May not require treatment"},
            {"range": [5, 9], "level": "Mild anxiety", "description": "Watchful waiting, follow-up"},
            {"range": [10, 14], "level": "Moderate anxiety", "description": "Possible clinically significant condition; consider counseling"},
            {"range": [15, 21], "level": "Severe anxiety", "description": "Active treatment with pharmacotherapy and/or psychotherapy"}
        ]
    },
    "Suicidal Ideation": {
        "name": "C-SSRS (Columbia-Suicide Severity Rating Scale)",
        "description": "A tool that helps identify whether someone is at risk for suicide.",
        "max_score": 25,
        "threshold": 6,
        "questions": [
            "Have you wished you were dead or wished you could go to sleep and not wake up?",
            "Have you actually had any thoughts about killing yourself?",
            "Have you thought about how you might kill yourself?",
            "Have you had any intention of acting on these thoughts?",
            "Have you started to work out or worked out the details of how to kill yourself? Do you intend to carry out this plan?"
        ],
        "scoring": [
            {"range": [0, 5], "level": "Low risk", "description": "Continue monitoring, safety planning if appropriate"},
            {"range": [6, 15], "level": "Moderate risk", "description": "Safety planning, increased monitoring, consider referral"},
            {"range": [16, 25], "level": "High risk", "description": "Immediate intervention required, safety planning, possible hospitalization"}
        ]
    },
    "Anger": {
        "name": "PROMIS Anger",
        "description": "A measure for evaluating anger in adults.",
        "max_score": 40,
        "threshold": 27,
        "questions": [
            "I felt angry",
            "I felt like I was ready to explode",
            "I was grouchy",
            "I felt annoyed",
            "I felt like I needed to let out my anger",
            "I had trouble controlling my temper",
            "I felt like yelling at someone",
            "I felt like breaking things"
        ],
        "scoring": [
            {"range": [0, 13], "level": "Low anger", "description": "Minimal concern; continue monitoring"},
            {"range": [14, 26], "level": "Moderate anger", "description": "Consider anger management strategies"},
            {"range": [27, 40], "level": "High anger", "description": "Significant concern; intervention recommended"}
        ]
    },
    "Mania": {
        "name": "Altman Self-Rating Mania Scale (ASRM)",
        "description": "A 5-item self-rating mania scale to assess the presence and severity of manic symptoms.",
        "max_score": 20,
        "threshold": 6,
        "questions": [
            "Elevated/Euphoric Mood: Happiness, optimism, self-confidence",
            "Increased Motor Activity/Energy: More energy, more active, more restless",
            "Sexual Interest: More sexual interest, more sexual thoughts, sexual activity",
            "Sleep: Less need for sleep than usual",
            "Irritability: More irritable, more argumentative, less tolerant"
        ],
        "scoring": [
            {"range": [0, 5], "level": "No indication of mania", "description": "Continue monitoring if clinical suspicion exists"},
            {"range": [6, 10], "level": "Possible hypomania", "description": "Further assessment recommended; consider mood stabilization strategies"},
            {"range": [11, 20], "level": "High probability of mania", "description": "Immediate psychiatric evaluation recommended"}
        ]
    },
    "Somatic Symptoms": {
        "name": "PHQ-15 (Patient Health Questionnaire-15)",
        "description": "A 15-item somatic symptom scale to screen for somatization and to monitor somatic symptom severity.",
        "max_score": 30,
        "threshold": 10,
        "questions": [
            "Stomach pain",
            "Back pain",
            "Pain in your arms, legs, or joints",
            "Menstrual cramps or other problems with your periods (women only)",
            "Headaches",
            "Chest pain",
            "Dizziness",
            "Fainting spells",
            "Feeling your heart pound or race",
            "Shortness of breath",
            "Pain or problems during sexual intercourse",
            "Constipation, loose bowels, or diarrhea",
            "Nausea, gas, or indigestion",
            "Feeling tired or having low energy",
            "Trouble sleeping"
        ],
        "scoring": [
            {"range": [0, 4], "level": "Minimal somatic symptoms", "description": "Normal range; no intervention needed"},
            {"range": [5, 9], "level": "Low somatic symptoms", "description": "Monitor symptoms; consider physical evaluation if persistent"},
            {"range": [10, 14], "level": "Medium somatic symptoms", "description": "Consider comprehensive evaluation for physical and psychological factors"},
            {"range": [15, 30], "level": "High somatic symptoms", "description": "Significant somatization likely; comprehensive treatment plan recommended"}
        ]
    },
    "Psychosis": {
        "name": "PRIME Screen-Revised",
        "description": "A 12-item self-report screen designed to identify individuals who may be experiencing early signs of psychosis.",
        "max_score": 24,
        "threshold": 7,
        "questions": [
            "I think that I have felt that there are odd or unusual things going on that I can't explain.",
            "I think that I might be able to predict the future.",
            "I may have felt that there could possibly be something interrupting or controlling my thoughts, feelings, or actions.",
            "I have had the experience of doing something differently because of my superstitions.",
            "I think that I may get confused at times whether something I experience or perceive may be real or may be just part of my imagination or dreams.",
            "I have thought that it might be possible that other people can read my mind, or that I can read others' minds."
        ],
        "scoring": [
            {"range": [0, 6], "level": "Low likelihood of psychosis risk", "description": "Continue monitoring if concerns persist"},
            {"range": [7, 13], "level": "Possible psychosis risk", "description": "Further specialized assessment recommended"},
            {"range": [14, 24], "level": "High likelihood of psychosis risk", "description": "Prompt psychiatric evaluation recommended"}
        ]
    },
    "Sleep Problems": {
        "name": "ISI (Insomnia Severity Index)",
        "description": "A 7-item self-report questionnaire assessing the nature, severity, and impact of insomnia.",
        "max_score": 28,
        "threshold": 15,
        "questions": [
            "Difficulty falling asleep",
            "Difficulty staying asleep",
            "Problems waking up too early",
            "How satisfied/dissatisfied are you with your current sleep pattern?",
            "How noticeable to others do you think your sleep problem is in terms of impairing the quality of your life?",
            "How worried/distressed are you about your current sleep problem?",
            "To what extent do you consider your sleep problem to interfere with your daily functioning currently?"
        ],
        "scoring": [
            {"range": [0, 7], "level": "No clinically significant insomnia", "description": "No intervention needed"},
            {"range": [8, 14], "level": "Subthreshold insomnia", "description": "Sleep hygiene education may be helpful"},
            {"range": [15, 21], "level": "Moderate clinical insomnia", "description": "Treatment indicated; sleep hygiene, cognitive-behavioral therapy"},
            {"range": [22, 28], "level": "Severe clinical insomnia", "description": "Severe insomnia requiring comprehensive treatment approach"}
        ]
    },
    "Memory": {
        "name": "PROMIS Cognitive Function",
        "description": "A measure of perceived cognitive abilities.",
        "max_score": 40,
        "threshold": 14,
        "questions": [
            "I have had to work harder than usual to keep track of what I was doing",
            "I have had trouble shifting back and forth between different activities that require thinking",
            "My thinking has been slow",
            "I have had trouble forming thoughts",
            "I have had trouble adding or subtracting numbers in my head",
            "I have had trouble figuring out what I meant to do once I got there",
            "I have had trouble finding my way to a familiar place",
            "I have had trouble concentrating"
        ],
        "scoring": [
            {"range": [0, 13], "level": "Severe cognitive concerns", "description": "Comprehensive neuropsychological evaluation recommended"},
            {"range": [14, 26], "level": "Moderate cognitive concerns", "description": "Further assessment recommended; consider cognitive interventions"},
            {"range": [27, 40], "level": "Minimal cognitive concerns", "description": "Monitor if symptoms persist"}
        ]
    },
    "Repetitive Thoughts and Behaviors": {
        "name": "FOCI (Florida Obsessive-Compulsive Inventory)",
        "description": "A self-report measure of obsessive-compulsive symptoms.",
        "max_score": 20,
        "threshold": 8,
        "questions": [
            "Time occupied by obsessive thoughts",
            "Interference from obsessive thoughts",
            "Distress from obsessive thoughts",
            "Resistance to obsessive thoughts",
            "Control over obsessive thoughts",
            "Time spent performing compulsive behaviors",
            "Interference from compulsive behaviors",
            "Distress from compulsive behaviors",
            "Resistance to compulsive behaviors",
            "Control over compulsive behaviors"
        ],
        "scoring": [
            {"range": [0, 7], "level": "Minimal OCD symptoms", "description": "Monitor if symptoms persist"},
            {"range": [8, 13], "level": "Moderate OCD symptoms", "description": "Further assessment and possible intervention recommended"},
            {"range": [14, 20], "level": "Severe OCD symptoms", "description": "Specialized OCD treatment recommended"}
        ]
    },
    "Dissociation": {
        "name": "DES-II (Dissociative Experiences Scale)",
        "description": "A 28-item self-report measure of dissociative symptoms.",
        "max_score": 40,
        "threshold": 20,
        "questions": [
            "Some people have the experience of finding themselves in a place and having no idea how they got there.",
            "Some people have the experience of finding themselves dressed in clothes that they don't remember putting on.",
            "Some people have the experience of finding new things among their belongings that they do not remember buying.",
            "Some people sometimes find that they are approached by people that they do not know who call them by another name or insist that they have met them before.",
            "Some people have the experience of feeling as though they are standing next to themselves or watching themselves do something and they actually see themselves as if they were looking at another person."
        ],
        "scoring": [
            {"range": [0, 10], "level": "Normal range", "description": "No clinical concern"},
            {"range": [11, 20], "level": "Mild dissociation", "description": "Monitor for exacerbation; consider addressing triggers"},
            {"range": [21, 30], "level": "Moderate dissociation", "description": "Clinical intervention recommended; trauma-focused therapy may be beneficial"},
            {"range": [31, 40], "level": "Severe dissociation", "description": "Comprehensive trauma-focused treatment recommended"}
        ]
    },
    "Personality Functioning": {
        "name": "PID-5 (Personality Inventory for DSM-5)",
        "description": "A self-rated personality trait assessment scale for adults.",
        "max_score": 40,
        "threshold": 14,
        "questions": [
            "I don't get as much pleasure out of things as others seem to.",
            "I feel like I act totally on impulse.",
            "I often have thoughts that make sense to me but that other people say are strange.",
            "I avoid risky situations.",
            "It's no big deal if I hurt other people's feelings.",
            "I rarely get enthusiastic about anything.",
            "I go out of my way to avoid any kind of conflict.",
            "I'm inflexible in my ways, even when it would clearly be to my advantage to change."
        ],
        "scoring": [
            {"range": [0, 13], "level": "Low personality dysfunction", "description": "Minimal clinical concern"},
            {"range": [14, 26], "level": "Moderate personality dysfunction", "description": "Further assessment and possible intervention recommended"},
            {"range": [27, 40], "level": "High personality dysfunction", "description": "Comprehensive personality assessment and treatment recommended"}
        ]
    },
    "Substance Use": {
        "name": "ASSIST (Alcohol, Smoking and Substance Involvement Screening Test)",
        "description": "A screening test to assess use of psychoactive substances.",
        "max_score": 39,
        "threshold": 11,
        "questions": [
            "In your life, which of the following substances have you ever used?",
            "In the past three months, how often have you used the substances you mentioned?",
            "In the past three months, how often have you had a strong desire or urge to use?",
            "In the past three months, how often has your use of substances led to health, social, legal, or financial problems?",
            "In the past three months, how often have you failed to do what was normally expected of you because of your use of substances?",
            "Has a friend or relative or anyone else ever expressed concern about your use of substances?",
            "Have you ever tried and failed to control, cut down or stop using substances?"
        ],
        "scoring": [
            {"range": [0, 10], "level": "Low risk", "description": "General education on substance use"},
            {"range": [11, 26], "level": "Moderate risk", "description": "Brief intervention and monitoring recommended"},
            {"range": [27, 39], "level": "High risk", "description": "Intensive assessment and treatment recommended"}
        ]
    }
}

def register_therapist_routes(app):
    """Register therapist dashboard routes with the Flask app"""
    
    @app.route('/therapist')
    def therapist_dashboard():
        """Render the therapist dashboard page"""
        return render_template('therapist_dashboard.html')
    
    @app.route('/api/assessment-files')
    def get_assessment_files():
        """Get list of assessment result files"""
        try:
            results_dir = os.path.join(os.getcwd(), 'analysis_results')
            if not os.path.exists(results_dir):
                return jsonify({'files': []})
            
            files = [f for f in os.listdir(results_dir) if f.endswith('.json')]
            files.sort(reverse=True)  # Most recent first
            
            return jsonify({'files': files})
        except Exception as e:
            app.logger.error(f"Error getting assessment files: {str(e)}")
            return jsonify({'error': str(e)}), 500
    
    @app.route('/api/assessment-data')
    def get_assessment_data():
        """Get data from a specific assessment file"""
        try:
            file = request.args.get('file')
            if not file:
                return jsonify({'error': 'No file specified'}), 400
            
            file_path = os.path.join(os.getcwd(), 'analysis_results', file)
            if not os.path.exists(file_path):
                return jsonify({'error': 'File not found'}), 404
            
            with open(file_path, 'r') as f:
                data = json.load(f)
            
            return jsonify(data)
        except Exception as e:
            app.logger.error(f"Error getting assessment data: {str(e)}")
            return jsonify({'error': str(e)}), 500
    
    @app.route('/api/therapy-sessions')
    def get_therapy_sessions():
        """Get list of therapy session files"""
        try:
            # For demonstration, we'll create a sessions directory if it doesn't exist
            sessions_dir = os.path.join(os.getcwd(), 'therapy_sessions')
            os.makedirs(sessions_dir, exist_ok=True)
            
            
            files = [f for f in os.listdir(sessions_dir) if f.endswith('.txt')]
            files.sort(reverse=True)  # Most recent first
            
            return jsonify({'files': files})
        except Exception as e:
            app.logger.error(f"Error getting therapy sessions: {str(e)}")
            return jsonify({'error': str(e)}), 500
    
    @app.route('/api/therapy-session')
    def get_therapy_session():
        """Get content of a specific therapy session file"""
        try:
            file = request.args.get('file')
            if not file:
                return jsonify({'error': 'No file specified'}), 400
            
            file_path = os.path.join(os.getcwd(), 'therapy_sessions', file)
            if not os.path.exists(file_path):
                return jsonify({'error': 'File not found'}), 404
            
            with open(file_path, 'r') as f:
                content = f.read()
            
            return jsonify({'content': content})
        except Exception as e:
            app.logger.error(f"Error getting therapy session: {str(e)}")
            return jsonify({'error': str(e)}), 500
    
    @app.route('/api/run-assessment', methods=['POST'])
    def run_assessment():
        """Run a Level 2 assessment on a therapy session"""
        try:
            data = request.get_json()
            domain = data.get('domain')
            session_file = data.get('session')
            
            if not domain or not session_file:
                return jsonify({'error': 'Domain and session file required'}), 400
            
            # Get domain tool
            tool = DSM5_LEVEL2_TOOLS.get(domain)
            if not tool:
                return jsonify({'error': f'No assessment tool found for domain: {domain}'}), 400
            
            # Get session content
            file_path = os.path.join(os.getcwd(), 'therapy_sessions', session_file)
            if not os.path.exists(file_path):
                return jsonify({'error': 'Session file not found'}), 404
            
            with open(file_path, 'r') as f:
                session_content = f.read()
            
            # Preprocess session content
            processed_content = preprocess_text(session_content)
            
            # Call Groq API to analyze the session
            try:
                assessment_result = analyze_session_with_groq(processed_content, domain, tool, app)
                
                # Verify the result structure before returning
                if not assessment_result or 'scores' not in assessment_result or not isinstance(assessment_result['scores'], list):
                    app.logger.error(f"Invalid assessment result structure: {assessment_result}")
                    return jsonify({
                        'error': 'Invalid assessment result structure from LLM',
                        'details': 'The model response did not match the expected format.'
                    }), 500
                    
                return jsonify(assessment_result)
            except Exception as e:
                app.logger.error(f"Error from LLM processing: {str(e)}")
                # Return a more detailed error response
                return jsonify({
                    'error': f'Error analyzing session: {str(e)}',
                    'details': traceback.format_exc()
                }), 500
                
        except Exception as e:
            app.logger.error(f"Error running assessment: {str(e)}")
            # Return a formatted error response
            return jsonify({
                'error': str(e),
                'details': traceback.format_exc()
            }), 500


def analyze_session_with_groq(session_content, domain, tool, app):
    """Analyze a therapy session using Groq API for a specific domain"""
    # Get API key from environment variable
    api_key = os.environ.get("GROQ_API_KEY")
    if not api_key:
        raise Exception("Groq API key is missing. Please set the GROQ_API_KEY environment variable.")
    
    api_url = "https://api.groq.com/openai/v1/chat/completions"
    model = os.environ.get("GROQ_MODEL", "llama3-8b-8192")
    
    # Create system prompt
    system_prompt = f"""
    You are a specialized mental health assessment assistant trained on the {tool['name']}.
    You will carefully analyze therapy session text to identify evidence of symptoms related to {domain}.
    
    SCORING GUIDELINES:
    0: None - No evidence at all of the symptom
    1: Slight/Rare - Very minimal evidence, mentioned in passing, or a single isolated instance
    2: Mild/Several days - Clear but infrequent or low-intensity evidence appearing in multiple contexts
    3: Moderate/More than half the days - Strong evidence appearing consistently or with moderate intensity
    4: Severe/Nearly every day - Overwhelming evidence or explicit statements about severe and frequent symptoms
    
    IMPORTANT SCORING RULES:
    - Use the FULL RANGE of scores from 0-4 based on the evidence severity
    - Provide specific quotes from the session text that justify each score
    - Consider frequency, intensity, duration, and distress when scoring
    - If a symptom is explicitly denied, score it as 0
    
    Format your response as a JSON object with no additional explanation.
    """
    
    # Create user prompt with EXPLICIT formatting instructions
    user_prompt = f"""
    Therapy session text to analyze: 

    {session_content}
    
    Please analyze the above therapy session transcript and complete the {tool['name']} for {domain}:
    
    """
    
    # Add all questions to the prompt
    for i, question in enumerate(tool['questions']):
        user_prompt += f"\n{i+1}. {question}"
    
    user_prompt += """
    
    IMPORTANT: Your response must be valid JSON with no annotations within the strings.
    
    Respond with ONLY this exact JSON format:
    {
      "scores": [score1, score2, ...],
      "evidence": ["Direct quote from text", "Direct quote from text", ...]
    }
    
    For evidence, include ONLY the direct quotes without any annotations, explanations, or score indicators in parentheses.
    For example, use "I feel sad" NOT "I feel sad (score 2)".
    
    If no evidence is found for a question, use "No specific evidence found in the session." as the evidence string.
    """
    
    # Configure headers for the API request
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {api_key}"
    }
    
    # Prepare the payload for Groq API
    payload = {
        "model": model,
        "messages": [
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ],
        "temperature": 0.1,
        "max_tokens": 2000,
        "top_p": 0.95,
        "response_format": {"type": "json_object"}
    }
    
    # Make the API request
    response = requests.post(
        api_url,
        headers=headers,
        json=payload,
        timeout=90
    )
    
    # Log API response
    app.logger.info(f"Received response from Groq API with status: {response.status_code}")
    
    # Check for successful response
    if response.status_code != 200:
        raise Exception(f"API request failed with status code {response.status_code}: {response.text}")
    
    # Parse the response
    result = response.json()
    content = result["choices"][0]["message"]["content"]
    
    # Log parsed content
    app.logger.info(f"Parsed API response content: {content[:500]}...")
    
    # Try to parse the response as JSON
    try:
        assessment_result = json.loads(content)
    except json.JSONDecodeError:
        # If that fails, try to extract JSON using regex
        json_match = re.search(r'({.*})', content, re.DOTALL)
        if json_match:
            try:
                assessment_result = json.loads(json_match.group(1))
            except json.JSONDecodeError:
                raise Exception("Failed to extract valid JSON from the model response")
        else:
            raise Exception("No JSON object found in the model response")
    
    # Validate scores and evidence
    if "scores" not in assessment_result or "evidence" not in assessment_result:
        raise Exception("Response is missing required scores or evidence fields")
    
    # Ensure scores and evidence match the number of questions
    scores = assessment_result.get("scores", [])
    evidence = assessment_result.get("evidence", [])
    
    # Log the extracted scores
    app.logger.info(f"Extracted scores: {scores}")
    
    # Validate scores
    validated_scores = []
    for i in range(len(tool["questions"])):
        if i < len(scores) and isinstance(scores[i], (int, float)):
            # Cap scores to valid range (0-4)
            score = max(0, min(4, int(scores[i])))
            validated_scores.append(score)
        else:
            validated_scores.append(0)
    
    # Calculate total score and ensure it doesn't exceed max_score
    total_score = sum(validated_scores)
    if total_score > tool["max_score"]:
        # If total exceeds max, scale down proportionally
        scale_factor = tool["max_score"] / total_score
        validated_scores = [int(round(score * scale_factor)) for score in validated_scores]
        # Double-check the total again (due to rounding)
        if sum(validated_scores) > tool["max_score"]:
            # If still over, reduce the highest scores until within limit
            while sum(validated_scores) > tool["max_score"]:
                max_idx = validated_scores.index(max(validated_scores))
                validated_scores[max_idx] -= 1
    
    app.logger.info(f"Validated scores: {validated_scores}")
    
    # Validate evidence - strip any remaining annotations
    validated_evidence = []
    for i in range(len(tool["questions"])):
        if i < len(evidence) and evidence[i] and isinstance(evidence[i], str):
            # Remove any parenthetical annotations that might still be in the evidence
            cleaned_evidence = re.sub(r'\s*\(score \d\)\s*', '', evidence[i])
            validated_evidence.append(cleaned_evidence)
        else:
            validated_evidence.append("No specific evidence found in the session.")
    
    # Log the final result (without full evidence for brevity)
    app.logger.info(f"Final assessment result: {{'scores': {validated_scores}, 'evidence': (showing count only: {len(validated_evidence)})}}")
    
    return {
        "scores": validated_scores,
        "evidence": validated_evidence
    }

================
File: therapy_sessions/therapy_session_20250301.txt
================
Therapist: Hello, how have you been feeling since our last session?

Patient: Not great, to be honest. I've been really struggling to get out of bed in the mornings. Sometimes I just lie there for hours, not seeing the point in starting the day.

Therapist: I'm sorry to hear that. Can you tell me more about what you're experiencing?

Patient: It's like everything takes so much effort. Even simple things like showering or making food just seem overwhelming. I've been skipping meals because I don't have the energy to cook, and sometimes I don't even feel hungry.

Therapist: How has your sleep been?

Patient: Terrible. I fall asleep okay, but then I wake up at 3 or 4 AM and just lie there with all these negative thoughts swirling in my head. I keep thinking about all the ways I've disappointed people or messed things up.

Therapist: And how would you describe your mood throughout the day?

Patient: Just... empty, most of the time. Sometimes I get these waves of sadness that come out of nowhere. I was at the store yesterday and suddenly felt like crying for no reason. I had to leave my cart and just go sit in my car for a while.

Therapist: Have you been able to enjoy any activities that you normally find pleasurable?

Patient: Not really. I used to love painting and reading, but I haven't touched my brushes in weeks. I try to read but can't focus on the words. My friends invited me to a movie last weekend, but I made up an excuse not to go. I just don't have the energy to socialize or pretend that I'm okay.

Therapist: How are you feeling about yourself these days?

Patient: Like a failure, mostly. I keep thinking about all the things I should be doing better. My apartment is a mess, I'm behind on projects at work, and I feel like I'm letting everyone down. Sometimes I think people would be better off if I wasn't around.

Therapist: When you say people would be better off if you weren't around, can you tell me more about those thoughts?

Patient: It's not that I have a plan or anything. I just sometimes think the world wouldn't miss me if I was gone. I feel like a burden to everyone.

Therapist: Have you been having any thoughts about harming yourself?

Patient: Not actively. But sometimes I think it would be easier if I just didn't wake up. I wouldn't do anything about it though.

Therapist: Thank you for sharing that with me. How have you been coping with these feelings?

Patient: I've been trying to use some of the breathing techniques we talked about. They help a little in the moment, but then the feelings come back. Mostly I just try to distract myself with TV, but I can't even focus on that for long.

Therapist: And how is your anxiety? Last time we talked, you mentioned feeling anxious in social situations.

Patient: The anxiety is still there, but honestly, the sadness and emptiness are overwhelming it. I'm not really going to social events anyway, so I haven't had to deal with it as much. Though I did have a panic attack before a team meeting at work last week. My heart was racing and I felt like I couldn't breathe. I had to go to the bathroom and use those grounding techniques we talked about.

Therapist: How about your concentration and ability to focus?

Patient: It's been pretty bad. At work, I find myself staring at my computer screen for long periods without actually doing anything. I have to read the same paragraph multiple times because I can't focus on what I'm reading. My boss noticed and asked if everything was okay.

Therapist: What did you tell them?

Patient: Just that I've been having some personal issues. I don't want them to know about all this. I'm afraid they'll think I can't handle my job.

Therapist: Is there anything you've found that helps, even if just a little bit?

Patient: Taking walks sometimes helps clear my head momentarily. And my cat. When she curls up next to me, it gives me a reason to stay in the moment, at least for a little while.

Therapist: Those are good coping mechanisms. Let's talk more about expanding on those strategies and addressing some of these symptoms you've been experiencing...

================
File: therapy_sessions/therapy_session_anxiety_20250305.txt
================
Therapist: Hello, how have you been doing since our last session?

Patient: I've been feeling really on edge. It seems like it's been getting worse over the past couple of weeks.

Therapist: Can you tell me more about what "on edge" feels like for you?

Patient: It's like I'm constantly waiting for something bad to happen. My heart races a lot, and I feel this tightness in my chest. Sometimes I'll be doing something completely normal, like grocery shopping, and suddenly I feel like I can't breathe and need to leave immediately.

Therapist: That sounds difficult. Have you noticed any specific triggers for these feelings?

Patient: That's the frustrating part - it seems to happen randomly. Though work deadlines definitely make it worse. Last Thursday, my boss mentioned an upcoming presentation, and I immediately felt my heart pounding so hard I thought everyone could see it through my shirt. I had to excuse myself to the bathroom where I spent 15 minutes trying to calm down.

Therapist: How have these feelings been affecting your daily activities?

Patient: I've started avoiding certain situations. I canceled dinner with friends twice because the thought of being in a crowded restaurant made me feel panicky. And I've been taking the stairs at work because the idea of being trapped in the elevator feels unbearable. Yesterday I had to drive around the parking garage for 20 minutes until I found a spot near the exit because I was worried about getting trapped.

Therapist: You mentioned feeling like you can't breathe sometimes. Can you describe those episodes more?

Patient: It's terrifying. My chest gets tight, I can't catch my breath, and I feel lightheaded. During the worst one last week, my hands went numb and tingly, and I was convinced I was having a heart attack. My roommate wanted to call an ambulance, but it passed after about 15 minutes. These episodes make me afraid to go places alone in case it happens again.

Therapist: How have you been sleeping?

Patient: Terribly. I lie awake worrying about everything - work, my health, my relationships, even world events that I have no control over. My mind just won't shut off. When I do fall asleep, I often wake up around 3 AM with my heart racing from some nightmare I can't even remember. I'm lucky if I get 4-5 hours of broken sleep.

Therapist: Have you noticed yourself worrying about things that others might consider small matters?

Patient: All the time. Yesterday I spent two hours obsessing over an email I sent that had a tiny grammar mistake. I was convinced my colleague would think I was incompetent. And last week, a friend didn't text me back for a day, and I created this entire scenario in my head that she was angry with me. Turns out her phone was just broken.

Therapist: How do you feel physically throughout all this?

Patient: Exhausted but somehow still wound up. My muscles are constantly tense, especially in my shoulders and jaw. I've been getting these intense headaches, and my stomach is a mess. I've had diarrhea several times a week, and sometimes I feel too nauseated to eat properly.

Therapist: Have you found anything that helps reduce these feelings, even temporarily?

Patient: The breathing exercises you taught me help sometimes, but it's hard to remember to do them when I'm in the middle of panicking. Going for walks helps a bit too. But honestly, the only thing that really works is avoiding situations that make me anxious, which I know isn't a good long-term strategy.

Therapist: You mentioned worrying about your health. Can you tell me more about those concerns?

Patient: I've become hyperaware of every body sensation. If my chest hurts, I think heart attack. If I have a headache, I worry it's a brain tumor. Two days ago, I had a slight cough and immediately started worrying it was COVID or pneumonia. I've checked my temperature probably 20 times this week alone.

Therapist: That sounds really exhausting to live with. How has this been affecting your relationships?

Patient: I think I'm pushing people away. I've canceled plans so many times that friends have stopped inviting me. And when I am with people, I'm not really present because I'm so caught up in my anxious thoughts or monitoring my body for signs of panic. My partner says I seem distant and irritable, but I don't know how to explain what I'm going through.

Therapist: These are all important things for us to address. Let's talk about some strategies we can implement to help manage these symptoms...

================
File: therapy_sessions/therapy_session_substance_20250310.txt
================
Therapist: Thanks for coming in today. How have things been going since our last session?

Patient: It's been a tough week. I had promised myself I'd cut back, but then we had this work event on Tuesday, and I ended up drinking way more than I planned.

Therapist: Can you tell me more about what happened at the work event?

Patient: It was supposed to be just a team happy hour. I told myself I'd have one beer and leave early. But then people kept buying rounds, and I didn't want to seem antisocial. Before I knew it, I'd had six or seven drinks. I barely remember getting home.

Therapist: How did you feel the next day?

Patient: Terrible hangover, of course. I was late to work, couldn't concentrate, and my boss definitely noticed. But the worst part was the guilt. I had really promised myself I would moderate this time.

Therapist: You mentioned wanting to cut back. What's motivating that desire?

Patient: Honestly, I'm starting to see how it's affecting different parts of my life. My partner has been making comments about how much I drink. We got into a big fight last weekend when I came home drunk after saying I was just going out for one or two with friends. And I've noticed my tolerance increasing - it takes more and more to get the same effect.

Therapist: Besides alcohol, have you been using any other substances?

Patient: Well, I've been smoking more weed than usual. It helps me relax after a stressful day, and I tell myself it's better than drinking. But instead of replacing drinking, I'm kind of doing both now. And occasionally, maybe once or twice a month, I'll do some coke if someone offers it at a party.

Therapist: Has anyone else expressed concern about your substance use?

Patient: My sister mentioned something last month when I showed up late to my nephew's birthday. She could tell I was hungover. And my roommate made a comment about all the empty beer cans in our recycling. I brushed it off as a joke, but I could tell he was concerned.

Therapist: Have you ever tried to cut down or stop using alcohol or other substances?

Patient: I've tried a few times. Last January I did a "dry month" but only made it about two weeks. By the third weekend, I convinced myself I deserved a reward for making it that far. I've deleted the food delivery apps from my phone a few times because it makes it too easy to order beer when I'm already tipsy. But I always end up reinstalling them.

Therapist: Have you experienced any withdrawal symptoms when you try to cut back?

Patient: I get really irritable. And I have trouble sleeping - like, I'll lie awake for hours or wake up at 3 AM and not be able to get back to sleep. Sometimes my hands get a bit shaky the day after heavy drinking if I don't have a drink to "take the edge off."

Therapist: Have you noticed any impacts on your physical health?

Patient: My digestive system is a mess. I get acid reflux all the time now. And I've gained about 15 pounds in the last year, which I'm pretty sure is related to all the alcohol calories and late-night food orders. My workouts are less effective too - I keep skipping the gym when I'm hungover.

Therapist: What about impacts on your responsibilities at work or home?

Patient: There have been a few Monday mornings where I've called in sick because I was too hungover to function after a weekend of partying. And I've definitely been less productive overall. At home, I've been letting chores pile up. My apartment is a mess, and I keep ordering takeout instead of cooking.

Therapist: Have you ever found yourself in dangerous situations due to substance use?

Patient: I took an Uber home a few months ago and realized the next morning that I'd left my credit card at the bar. And there was a night last summer when I apparently tried to walk home from downtown and got lost - a friend found me wandering in the wrong direction. I don't actually remember much of that night. And I'm ashamed to admit it, but I've driven when I probably shouldn't have, thinking I was "fine" when I definitely wasn't.

Therapist: How do you typically feel when you're not using substances?

Patient: Honestly? Bored. Anxious. Like I'm missing something. Social events seem less fun, and it's harder to relax after work. Sometimes I'll sit there thinking about having a drink, and it's hard to focus on anything else until I do.

Therapist: It sounds like you're noticing some significant impacts. What would you like to change about your current substance use?

Patient: I don't know if I need to quit completely, but I definitely need more control. I'd like to be able to have just one or two drinks and stop. I want to be more reliable for the people in my life. And I'm worried about where this is heading if I don't make changes soon.

Therapist: Those are important insights. Let's talk about some strategies and resources that might help you work toward those goals...



================================================================
End of Codebase
================================================================
